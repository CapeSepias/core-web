{"version":3,"sources":["element_injector_spec.js"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/element_injector_spec.es6","sourcesContent":["import {describe, ddescribe, it, iit, xit, xdescribe, expect, beforeEach, SpyObject, proxy, el} from 'angular2/test_lib';\nimport {isBlank, isPresent, IMPLEMENTS} from 'angular2/src/facade/lang';\nimport {ListWrapper, MapWrapper, List, StringMapWrapper, iterateListLike} from 'angular2/src/facade/collection';\nimport {ProtoElementInjector, PreBuiltObjects, DirectiveBinding, TreeNode}\n  from 'angular2/src/core/compiler/element_injector';\nimport {Parent, Ancestor} from 'angular2/src/core/annotations_impl/visibility';\nimport {Attribute, Query} from 'angular2/src/core/annotations_impl/di';\nimport {Directive, onDestroy} from 'angular2/src/core/annotations_impl/annotations';\nimport {Optional, Injector, Inject, bind} from 'angular2/di';\nimport {AppProtoView, AppView} from 'angular2/src/core/compiler/view';\nimport {ViewContainerRef} from 'angular2/src/core/compiler/view_container_ref';\nimport {ProtoViewRef} from 'angular2/src/core/compiler/view_ref';\nimport {ElementRef} from 'angular2/src/core/compiler/element_ref';\nimport {DynamicChangeDetector, ChangeDetectorRef, Parser, Lexer} from 'angular2/change_detection';\nimport {ViewRef, Renderer} from 'angular2/src/render/api';\nimport {QueryList} from 'angular2/src/core/compiler/query_list';\n\nclass DummyDirective extends Directive {\n  constructor({lifecycle, events} = {}) { super({lifecycle: lifecycle, events: events}); }\n}\n\n@proxy\n@IMPLEMENTS(AppView)\nclass DummyView extends SpyObject {\n  componentChildViews;\n  changeDetector;\n  constructor() {\n    super();\n    this.componentChildViews = [];\n    this.changeDetector = null;\n  }\n  noSuchMethod(m){return super.noSuchMethod(m);}\n}\n\n\nclass SimpleDirective {\n}\n\nclass SomeOtherDirective {\n}\n\nvar _constructionCount = 0;\nclass CountingDirective {\n  count;\n  constructor() {\n    this.count = _constructionCount;\n    _constructionCount += 1;\n  }\n}\n\nclass FancyCountingDirective extends CountingDirective {\n  constructor() {\n    super();\n  }\n}\n\nclass NeedsDirective {\n  dependency:SimpleDirective;\n  constructor(dependency:SimpleDirective){\n    this.dependency = dependency;\n  }\n}\n\nclass OptionallyNeedsDirective {\n  dependency:SimpleDirective;\n  constructor(@Optional() dependency:SimpleDirective){\n    this.dependency = dependency;\n  }\n}\n\nclass NeedDirectiveFromParent {\n  dependency:SimpleDirective;\n  constructor(@Parent() dependency:SimpleDirective){\n    this.dependency = dependency;\n  }\n}\n\nclass NeedDirectiveFromAncestor {\n  dependency:SimpleDirective;\n  constructor(@Ancestor() dependency:SimpleDirective){\n    this.dependency = dependency;\n  }\n}\n\nclass NeedsService {\n  service:any;\n  constructor(@Inject(\"service\") service) {\n    this.service = service;\n  }\n}\n\nclass HasEventEmitter {\n  emitter;\n  constructor() {\n    this.emitter = \"emitter\";\n  }\n}\n\nclass NeedsAttribute {\n  typeAttribute;\n  titleAttribute;\n  fooAttribute;\n  constructor(@Attribute('type') typeAttribute: String, @Attribute('title') titleAttribute: String, @Attribute('foo') fooAttribute: String) {\n    this.typeAttribute = typeAttribute;\n    this.titleAttribute = titleAttribute;\n    this.fooAttribute = fooAttribute;\n  }\n}\n\nclass NeedsAttributeNoType {\n  fooAttribute;\n  constructor(@Attribute('foo') fooAttribute) {\n    this.fooAttribute = fooAttribute;\n  }\n}\n\nclass NeedsQuery {\n  query: QueryList;\n  constructor(@Query(CountingDirective) query: QueryList) {\n    this.query = query;\n  }\n}\n\nclass NeedsElementRef {\n  elementRef;\n  constructor(ref:ElementRef) {\n    this.elementRef = ref;\n  }\n}\n\nclass NeedsViewContainer {\n  viewContainer;\n  constructor(vc:ViewContainerRef) {\n    this.viewContainer = vc;\n  }\n}\n\nclass NeedsProtoViewRef {\n  protoViewRef;\n  constructor(ref:ProtoViewRef) {\n    this.protoViewRef = ref;\n  }\n}\n\nclass NeedsChangeDetectorRef {\n  changeDetectorRef;\n  constructor(cdr:ChangeDetectorRef) {\n    this.changeDetectorRef = cdr;\n  }\n}\n\nclass A_Needs_B {\n  constructor(dep){}\n}\n\nclass B_Needs_A {\n  constructor(dep){}\n}\n\nclass DirectiveWithDestroy {\n  onDestroyCounter:number;\n\n  constructor(){\n    this.onDestroyCounter = 0;\n  }\n\n  onDestroy() {\n    this.onDestroyCounter ++;\n  }\n}\n\nclass TestNode extends TreeNode {\n  message: string;\n  constructor(parent:TestNode, message) {\n    super(parent);\n    this.message = message;\n  }\n  toString() {\n    return this.message;\n  }\n}\n\nexport function main() {\n  var defaultPreBuiltObjects = new PreBuiltObjects(null, null, null);\n  var appInjector = Injector.resolveAndCreate([]);\n\n  function humanize(tree, names:List) {\n    var lookupName = (item) =>\n      ListWrapper.last(\n        ListWrapper.find(names, (pair) => pair[0] === item));\n\n    if (tree.children.length == 0) return lookupName(tree);\n    var children = tree.children.map(m => humanize(m, names));\n    return [lookupName(tree), children];\n  }\n\n  function injector(bindings, lightDomAppInjector = null, shadowDomAppInjector = null, preBuiltObjects = null, attributes = null) {\n    if (isBlank(lightDomAppInjector)) lightDomAppInjector = appInjector;\n\n    var proto = new ProtoElementInjector(null, 0, bindings, isPresent(shadowDomAppInjector));\n    proto.attributes = attributes;\n    var inj = proto.instantiate(null);\n    var preBuilt = isPresent(preBuiltObjects) ? preBuiltObjects : defaultPreBuiltObjects;\n\n    inj.instantiateDirectives(lightDomAppInjector, null, shadowDomAppInjector, preBuilt);\n    return inj;\n  }\n\n  function parentChildInjectors(parentBindings, childBindings, parentPreBuildObjects = null) {\n    if (isBlank(parentPreBuildObjects)) parentPreBuildObjects = defaultPreBuiltObjects;\n\n    var inj = Injector.resolveAndCreate([]);\n\n    var protoParent = new ProtoElementInjector(null, 0, parentBindings);\n    var parent = protoParent.instantiate(null);\n\n    parent.instantiateDirectives(inj, null, null, parentPreBuildObjects);\n\n    var protoChild = new ProtoElementInjector(protoParent, 1, childBindings, false, 1);\n    var child = protoChild.instantiate(parent);\n    child.instantiateDirectives(inj, null, null, defaultPreBuiltObjects);\n\n    return child;\n  }\n\n  function hostShadowInjectors(hostBindings, shadowBindings, hostPreBuildObjects = null) {\n    if (isBlank(hostPreBuildObjects)) hostPreBuildObjects = defaultPreBuiltObjects;\n\n    var inj = Injector.resolveAndCreate([]);\n    var shadowInj = inj.resolveAndCreateChild([]);\n\n    var protoParent = new ProtoElementInjector(null, 0, hostBindings, true);\n    var host = protoParent.instantiate(null);\n    host.instantiateDirectives(inj, null, shadowInj, hostPreBuildObjects);\n\n    var protoChild = new ProtoElementInjector(protoParent, 0, shadowBindings, false, 1);\n    var shadow = protoChild.instantiate(null);\n    shadow.instantiateDirectives(shadowInj, host, null, null);\n\n    return shadow;\n  }\n\n  describe('TreeNodes', () => {\n    var root, firstParent, lastParent, node;\n\n    /*\n      Build a tree of the following shape:\n      root\n        - p1\n          - c1\n          - c2\n        - p2\n          - c3\n     */\n    beforeEach(() => {\n      root = new TestNode(null, 'root');\n      var p1 = firstParent = new TestNode(root, 'p1');\n      var p2 = lastParent = new TestNode(root, 'p2');\n      node = new TestNode(p1, 'c1');\n      new TestNode(p1, 'c2');\n      new TestNode(p2, 'c3');\n    });\n\n    // depth-first pre-order.\n    function walk(node, f) {\n      if (isBlank(node)) return f;\n      f(node);\n      ListWrapper.forEach(node.children, (n) => walk(n, f));\n    }\n\n    function logWalk(node) {\n      var log = '';\n      walk(node, (n) => {\n        log += (log.length != 0 ? ', ' : '') + n.toString();\n      });\n      return log;\n    }\n\n    it('should support listing children', () => {\n      expect(logWalk(root)).toEqual('root, p1, c1, c2, p2, c3');\n    });\n\n    it('should support removing the first child node', () => {\n      firstParent.remove();\n\n      expect(firstParent.parent).toEqual(null);\n      expect(logWalk(root)).toEqual('root, p2, c3');\n    });\n\n    it('should support removing the last child node', () => {\n      lastParent.remove();\n\n      expect(logWalk(root)).toEqual('root, p1, c1, c2');\n    });\n\n    it('should support moving a node at the end of children', () => {\n      node.remove();\n      root.addChild(node);\n\n      expect(logWalk(root)).toEqual('root, p1, c2, p2, c3, c1');\n    });\n\n    it('should support moving a node in the beginning of children', () => {\n      node.remove();\n      lastParent.addChildAfter(node, null);\n\n      expect(logWalk(root)).toEqual('root, p1, c2, p2, c1, c3');\n    });\n\n    it('should support moving a node in the middle of children', () => {\n      node.remove();\n      lastParent.addChildAfter(node, firstParent);\n\n      expect(logWalk(root)).toEqual('root, p1, c2, c1, p2, c3');\n    });\n  });\n\n  describe(\"ProtoElementInjector\", () => {\n    describe(\"direct parent\", () => {\n      it(\"should return parent proto injector when distance is 1\", () => {\n        var distance = 1;\n        var protoParent = new ProtoElementInjector(null, 0, []);\n        var protoChild = new ProtoElementInjector(protoParent, 1, [], false, distance);\n\n        expect(protoChild.directParent()).toEqual(protoParent);\n      });\n\n      it(\"should return null otherwise\", () => {\n        var distance = 2;\n        var protoParent = new ProtoElementInjector(null, 0, []);\n        var protoChild = new ProtoElementInjector(protoParent, 1, [], false, distance);\n\n        expect(protoChild.directParent()).toEqual(null);\n      });\n\n      it(\"should allow for direct access using getDirectiveBindingAtIndex\", function () {\n        var binding = DirectiveBinding.createFromBinding(\n          bind(SimpleDirective).toClass(SimpleDirective), null);\n        var proto = new ProtoElementInjector(null, 0, [binding]);\n\n        expect(proto.getDirectiveBindingAtIndex(0)).toBeAnInstanceOf(DirectiveBinding);\n        expect(() => proto.getDirectiveBindingAtIndex(-1)).toThrowError(\n          'Index -1 is out-of-bounds.');\n        expect(() => proto.getDirectiveBindingAtIndex(10)).toThrowError(\n          'Index 10 is out-of-bounds.');\n      });\n    });\n\n    describe('event emitters', () => {\n      it('should return a list of event emitter accessors', () => {\n        var binding = DirectiveBinding.createFromType(\n          HasEventEmitter, new DummyDirective({events: ['emitter']}));\n\n        var inj = new ProtoElementInjector(null, 0, [binding]);\n        expect(inj.eventEmitterAccessors.length).toEqual(1);\n\n        var accessor = inj.eventEmitterAccessors[0][0];\n        expect(accessor.eventName).toEqual('emitter');\n        expect(accessor.getter(new HasEventEmitter())).toEqual('emitter');\n      });\n    });\n  });\n\n  describe(\"ElementInjector\", function () {\n    describe(\"instantiate\", function () {\n      it(\"should create an element injector\", function () {\n        var protoParent = new ProtoElementInjector(null, 0, []);\n        var protoChild1 = new ProtoElementInjector(protoParent, 1, []);\n        var protoChild2 = new ProtoElementInjector(protoParent, 2, []);\n\n        var p = protoParent.instantiate(null);\n        var c1 = protoChild1.instantiate(p);\n        var c2 = protoChild2.instantiate(p);\n\n        expect(humanize(p, [\n          [p, 'parent'],\n          [c1, 'child1'],\n          [c2, 'child2']\n        ])).toEqual([\"parent\", [\"child1\", \"child2\"]]);\n      });\n\n      describe(\"direct parent\", () => {\n        it(\"should return parent injector when distance is 1\", () => {\n          var distance = 1;\n          var protoParent = new ProtoElementInjector(null, 0, []);\n          var protoChild = new ProtoElementInjector(protoParent, 1, [], false, distance);\n\n          var p = protoParent.instantiate(null);\n          var c = protoChild.instantiate(p);\n\n          expect(c.directParent()).toEqual(p);\n        });\n\n        it(\"should return null otherwise\", () => {\n          var distance = 2;\n          var protoParent = new ProtoElementInjector(null, 0, []);\n          var protoChild = new ProtoElementInjector(protoParent, 1, [], false, distance);\n\n          var p = protoParent.instantiate(null);\n          var c = protoChild.instantiate(p);\n\n          expect(c.directParent()).toEqual(null);\n        });\n      });\n    });\n\n    describe(\"hasBindings\", function () {\n      it(\"should be true when there are bindings\", function () {\n        var p = new ProtoElementInjector(null, 0, [SimpleDirective]);\n        expect(p.hasBindings).toBeTruthy();\n      });\n\n      it(\"should be false otherwise\", function () {\n        var p = new ProtoElementInjector(null, 0, []);\n        expect(p.hasBindings).toBeFalsy();\n      });\n    });\n\n    describe(\"hasInstances\", function () {\n      it(\"should be false when no directives are instantiated\", function () {\n        expect(injector([]).hasInstances()).toBe(false);\n      });\n\n      it(\"should be true when directives are instantiated\", function () {\n        expect(injector([SimpleDirective]).hasInstances()).toBe(true);\n      });\n    });\n\n    describe(\"instantiateDirectives\", function () {\n      it(\"should instantiate directives that have no dependencies\", function () {\n        var inj = injector([SimpleDirective]);\n        expect(inj.get(SimpleDirective)).toBeAnInstanceOf(SimpleDirective);\n      });\n\n      it(\"should instantiate directives that depend on other directives\", function () {\n        var inj = injector([SimpleDirective, NeedsDirective]);\n\n        var d = inj.get(NeedsDirective);\n\n        expect(d).toBeAnInstanceOf(NeedsDirective);\n        expect(d.dependency).toBeAnInstanceOf(SimpleDirective);\n      });\n\n      it(\"should instantiate directives that depend on app services\", function () {\n        var appInjector = Injector.resolveAndCreate([\n          bind(\"service\").toValue(\"service\")\n        ]);\n        var inj = injector([NeedsService], appInjector);\n\n        var d = inj.get(NeedsService);\n        expect(d).toBeAnInstanceOf(NeedsService);\n        expect(d.service).toEqual(\"service\");\n      });\n\n      it(\"should instantiate directives that depend on pre built objects\", function () {\n        var protoView = new AppProtoView(null, null, null, null, null);\n        var inj = injector([NeedsProtoViewRef], null, null, new PreBuiltObjects(null, null, protoView));\n\n        expect(inj.get(NeedsProtoViewRef).protoViewRef).toEqual(new ProtoViewRef(protoView));\n      });\n\n      it(\"should instantiate directives that depend on the containing component\", function () {\n        var shadow = hostShadowInjectors([SimpleDirective], [NeedsDirective]);\n\n        var d = shadow.get(NeedsDirective);\n        expect(d).toBeAnInstanceOf(NeedsDirective);\n        expect(d.dependency).toBeAnInstanceOf(SimpleDirective);\n      });\n\n      it(\"should not instantiate directives that depend on other directives in the containing component's ElementInjector\", () => {\n        expect(() => {\n          hostShadowInjectors([SomeOtherDirective, SimpleDirective], [NeedsDirective]);\n        }).toThrowError('No provider for SimpleDirective! (NeedsDirective -> SimpleDirective)')\n      });\n\n      it(\"should instantiate component directives that depend on app services in the shadow app injector\", () => {\n        var shadowAppInjector = Injector.resolveAndCreate([\n          bind(\"service\").toValue(\"service\")\n        ]);\n        var inj = injector([NeedsService], null, shadowAppInjector);\n\n        var d = inj.get(NeedsService);\n        expect(d).toBeAnInstanceOf(NeedsService);\n        expect(d.service).toEqual(\"service\");\n      });\n\n      it(\"should not instantiate other directives that depend on app services in the shadow app injector\", () => {\n        var shadowAppInjector = Injector.resolveAndCreate([\n          bind(\"service\").toValue(\"service\")\n        ]);\n        expect(() => {\n          injector([SomeOtherDirective, NeedsService], null, shadowAppInjector);\n        }).toThrowError('No provider for service! (NeedsService -> service)');\n      });\n\n      it(\"should return app services\", function () {\n        var appInjector = Injector.resolveAndCreate([\n          bind(\"service\").toValue(\"service\")\n        ]);\n        var inj = injector([], appInjector);\n\n        expect(inj.get('service')).toEqual('service');\n      });\n\n      it(\"should get directives from parent\", function () {\n        var child = parentChildInjectors([SimpleDirective], [NeedDirectiveFromParent]);\n\n        var d = child.get(NeedDirectiveFromParent);\n\n        expect(d).toBeAnInstanceOf(NeedDirectiveFromParent);\n        expect(d.dependency).toBeAnInstanceOf(SimpleDirective);\n      });\n\n      it(\"should not return parent's directives on self\", function () {\n        expect(() => {\n          injector([SimpleDirective, NeedDirectiveFromParent]);\n        }).toThrowError();\n      });\n\n      it(\"should get directives from ancestor\", function () {\n        var child = parentChildInjectors([SimpleDirective], [NeedDirectiveFromAncestor]);\n\n        var d = child.get(NeedDirectiveFromAncestor);\n\n        expect(d).toBeAnInstanceOf(NeedDirectiveFromAncestor);\n        expect(d.dependency).toBeAnInstanceOf(SimpleDirective);\n      });\n\n      it(\"should throw when no SimpleDirective found\", function () {\n        expect(() => injector([NeedDirectiveFromParent])).\n          toThrowError('No provider for SimpleDirective! (NeedDirectiveFromParent -> SimpleDirective)');\n      });\n\n      it(\"should inject null when no directive found\", function () {\n        var inj = injector([OptionallyNeedsDirective]);\n        var d = inj.get(OptionallyNeedsDirective);\n        expect(d.dependency).toEqual(null);\n      });\n\n      it(\"should accept SimpleDirective bindings instead of SimpleDirective types\", function () {\n        var inj = injector([\n          DirectiveBinding.createFromBinding(bind(SimpleDirective).toClass(SimpleDirective), null)\n        ]);\n        expect(inj.get(SimpleDirective)).toBeAnInstanceOf(SimpleDirective);\n      });\n\n      it(\"should allow for direct access using getDirectiveAtIndex\", function () {\n        var inj = injector([\n          DirectiveBinding.createFromBinding(bind(SimpleDirective).toClass(SimpleDirective), null)\n        ]);\n        expect(inj.getDirectiveAtIndex(0)).toBeAnInstanceOf(SimpleDirective);\n        expect(() => inj.getDirectiveAtIndex(-1)).toThrowError(\n          'Index -1 is out-of-bounds.');\n        expect(() => inj.getDirectiveAtIndex(10)).toThrowError(\n          'Index 10 is out-of-bounds.');\n      });\n\n      it(\"should handle cyclic dependencies\", function () {\n        expect(() => {\n          var bAneedsB = bind(A_Needs_B).toFactory((a) => new A_Needs_B(a), [B_Needs_A]);\n          var bBneedsA = bind(B_Needs_A).toFactory((a) => new B_Needs_A(a), [A_Needs_B]);\n          injector([\n            DirectiveBinding.createFromBinding(bAneedsB, null),\n            DirectiveBinding.createFromBinding(bBneedsA, null)\n          ]);\n        }).toThrowError('Cannot instantiate cyclic dependency! ' +\n        '(A_Needs_B -> B_Needs_A -> A_Needs_B)');\n      });\n\n      it(\"should call onDestroy on directives subscribed to this event\", function() {\n        var inj = injector([DirectiveBinding.createFromType(\n            DirectiveWithDestroy,\n            new DummyDirective({lifecycle: [onDestroy]}))]);\n        var destroy = inj.get(DirectiveWithDestroy);\n        inj.clearDirectives();\n        expect(destroy.onDestroyCounter).toBe(1);\n      });\n    });\n\n    describe(\"dynamicallyCreateComponent\", () => {\n      it(\"should create a component dynamically\", () => {\n        var inj = injector([]);\n        inj.dynamicallyCreateComponent(DirectiveBinding.createFromType(SimpleDirective, null), null);\n        expect(inj.getDynamicallyLoadedComponent()).toBeAnInstanceOf(SimpleDirective);\n        expect(inj.get(SimpleDirective)).toBeAnInstanceOf(SimpleDirective);\n      });\n\n      it(\"should inject parent dependencies into the dynamically-loaded component\", () => {\n        var inj = parentChildInjectors([SimpleDirective], []);\n        inj.dynamicallyCreateComponent(DirectiveBinding.createFromType(NeedDirectiveFromAncestor, null), null);\n        expect(inj.getDynamicallyLoadedComponent()).toBeAnInstanceOf(NeedDirectiveFromAncestor);\n        expect(inj.getDynamicallyLoadedComponent().dependency).toBeAnInstanceOf(SimpleDirective);\n      });\n\n      it(\"should not inject the proxy component into the children of the dynamically-loaded component\", () => {\n        var injWithDynamicallyLoadedComponent = injector([SimpleDirective]);\n        injWithDynamicallyLoadedComponent.dynamicallyCreateComponent(DirectiveBinding.createFromType(SomeOtherDirective, null), null);\n\n        var shadowDomProtoInjector = new ProtoElementInjector(null, 0, [NeedDirectiveFromAncestor], false);\n        var shadowDomInj = shadowDomProtoInjector.instantiate(null);\n\n        expect(() =>\n          shadowDomInj.instantiateDirectives(appInjector, injWithDynamicallyLoadedComponent,null, defaultPreBuiltObjects)).\n          toThrowError(new RegExp(\"No provider for SimpleDirective\"));\n      });\n\n      it(\"should not inject the dynamically-loaded component into directives on the same element\", () => {\n        var proto = new ProtoElementInjector(null, 0, [NeedsDirective], false);\n        var inj = proto.instantiate(null);\n        inj.dynamicallyCreateComponent(DirectiveBinding.createFromType(SimpleDirective, null), null);\n\n        expect(() => inj.instantiateDirectives(null, null, null, null)).toThrowError();\n      });\n\n      it(\"should inject the dynamically-loaded component into the children of the dynamically-loaded component\", () => {\n        var injWithDynamicallyLoadedComponent = injector([]);\n        injWithDynamicallyLoadedComponent.dynamicallyCreateComponent(DirectiveBinding.createFromType(SimpleDirective, null), null);\n\n        var shadowDomProtoInjector = new ProtoElementInjector(null, 0, [NeedDirectiveFromAncestor], false);\n        var shadowDomInjector = shadowDomProtoInjector.instantiate(null);\n        shadowDomInjector.instantiateDirectives(appInjector, injWithDynamicallyLoadedComponent, null, defaultPreBuiltObjects);\n\n        expect(shadowDomInjector.get(NeedDirectiveFromAncestor)).toBeAnInstanceOf(NeedDirectiveFromAncestor);\n        expect(shadowDomInjector.get(NeedDirectiveFromAncestor).dependency).toBeAnInstanceOf(SimpleDirective);\n      });\n\n      it(\"should remove the dynamically-loaded component when dehydrating\", () => {\n        var inj = injector([]);\n        inj.dynamicallyCreateComponent(\n          DirectiveBinding.createFromType(\n            DirectiveWithDestroy,\n            new DummyDirective({lifecycle: [onDestroy]})\n          ),\n          null);\n        var dir = inj.getDynamicallyLoadedComponent();\n\n        inj.clearDirectives();\n\n        expect(inj.getDynamicallyLoadedComponent()).toBe(null);\n        expect(dir.onDestroyCounter).toBe(1);\n\n        inj.instantiateDirectives(null, null, null, null);\n\n        expect(inj.getDynamicallyLoadedComponent()).toBe(null);\n      });\n\n      it(\"should inject services of the dynamically-loaded component\", () => {\n        var inj = injector([]);\n        var appInjector = Injector.resolveAndCreate([bind(\"service\").toValue(\"Service\")]);\n        inj.dynamicallyCreateComponent(DirectiveBinding.createFromType(NeedsService, null), appInjector);\n        expect(inj.getDynamicallyLoadedComponent().service).toEqual(\"Service\");\n      });\n    });\n\n    describe('static attributes', () => {\n      it('should be injectable', () => {\n        var attributes = MapWrapper.create();\n        MapWrapper.set(attributes, 'type', 'text');\n        MapWrapper.set(attributes, 'title', '');\n\n        var inj = injector([NeedsAttribute], null, null, null, attributes);\n        var needsAttribute = inj.get(NeedsAttribute);\n\n        expect(needsAttribute.typeAttribute).toEqual('text');\n        expect(needsAttribute.titleAttribute).toEqual('');\n        expect(needsAttribute.fooAttribute).toEqual(null);\n      });\n\n      it('should be injectable without type annotation', () => {\n        var attributes = MapWrapper.create();\n        MapWrapper.set(attributes, 'foo', 'bar');\n\n        var inj = injector([NeedsAttributeNoType], null, null, null, attributes);\n        var needsAttribute = inj.get(NeedsAttributeNoType);\n\n        expect(needsAttribute.fooAttribute).toEqual('bar');\n      });\n    });\n\n    describe(\"refs\", () => {\n      it(\"should inject ElementRef\", () => {\n        var inj = injector([NeedsElementRef]);\n        expect(inj.get(NeedsElementRef).elementRef).toBeAnInstanceOf(ElementRef);\n      });\n\n      it('should inject ChangeDetectorRef', function () {\n        var cd = new DynamicChangeDetector(null, null, null, [], []);\n        var view = new DummyView();\n        var childView = new DummyView();\n        childView.changeDetector = cd;\n        view.componentChildViews = [childView];\n        var inj = injector([NeedsChangeDetectorRef], null, null, new PreBuiltObjects(null, view, null));\n\n        expect(inj.get(NeedsChangeDetectorRef).changeDetectorRef).toBe(cd.ref);\n      });\n\n      it('should inject ViewContainerRef', () => {\n        var inj = injector([NeedsViewContainer]);\n        expect(inj.get(NeedsViewContainer).viewContainer).toBeAnInstanceOf(ViewContainerRef);\n      });\n\n      it(\"should inject ProtoViewRef\", function () {\n        var protoView = new AppProtoView(null, null, null, null, null);\n        var inj = injector([NeedsProtoViewRef], null, null, new PreBuiltObjects(null, null, protoView));\n\n        expect(inj.get(NeedsProtoViewRef).protoViewRef).toEqual(new ProtoViewRef(protoView));\n      });\n\n      it(\"should throw if there is no ProtoViewRef\", function () {\n        expect(\n          () => injector([NeedsProtoViewRef])\n        ).toThrowError('No provider for ProtoViewRef! (NeedsProtoViewRef -> ProtoViewRef)');\n      });\n    });\n\n    describe('directive queries', () => {\n      var preBuildObjects = defaultPreBuiltObjects;\n      beforeEach(() => {\n        _constructionCount = 0;\n      });\n\n      function expectDirectives(query, type, expectedIndex) {\n        var currentCount = 0;\n        iterateListLike(query, (i) => {\n          expect(i).toBeAnInstanceOf(type);\n          expect(i.count).toBe(expectedIndex[currentCount]);\n          currentCount += 1;\n        });\n      }\n\n      it('should be injectable', () => {\n        var inj = injector([NeedsQuery], null, null, preBuildObjects);\n        expect(inj.get(NeedsQuery).query).toBeAnInstanceOf(QueryList);\n      });\n\n      it('should contain directives on the same injector', () => {\n        var inj = injector([NeedsQuery, CountingDirective], null, null, preBuildObjects);\n\n        expectDirectives(inj.get(NeedsQuery).query, CountingDirective, [0]);\n      });\n\n      // Dart's restriction on static types in (a is A) makes this feature hard to implement.\n      // Current proposal is to add second parameter the Query constructor to take a\n      // comparison function to support user-defined definition of matching.\n\n      //it('should support super class directives', () => {\n      //  var inj = injector([NeedsQuery, FancyCountingDirective], null, null, preBuildObjects);\n      //\n      //  expectDirectives(inj.get(NeedsQuery).query, FancyCountingDirective, [0]);\n      //});\n\n      it('should contain directives on the same and a child injector in construction order', () => {\n        var protoParent = new ProtoElementInjector(null, 0, [NeedsQuery, CountingDirective]);\n        var protoChild = new ProtoElementInjector(protoParent, 1, [CountingDirective]);\n\n        var parent = protoParent.instantiate(null);\n        var child = protoChild.instantiate(parent);\n        parent.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n        child.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n\n        expectDirectives(parent.get(NeedsQuery).query, CountingDirective, [0,1]);\n      });\n\n      it('should reflect unlinking an injector', () => {\n        var protoParent = new ProtoElementInjector(null, 0, [NeedsQuery, CountingDirective]);\n        var protoChild = new ProtoElementInjector(protoParent, 1, [CountingDirective]);\n\n        var parent = protoParent.instantiate(null);\n        var child = protoChild.instantiate(parent);\n        parent.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n        child.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n\n        child.unlink();\n\n        expectDirectives(parent.get(NeedsQuery).query, CountingDirective, [0]);\n      });\n\n      it('should reflect moving an injector as a last child', () => {\n        var protoParent = new ProtoElementInjector(null, 0, [NeedsQuery, CountingDirective]);\n        var protoChild1 = new ProtoElementInjector(protoParent, 1, [CountingDirective]);\n        var protoChild2 = new ProtoElementInjector(protoParent, 1, [CountingDirective]);\n\n        var parent = protoParent.instantiate(null);\n        var child1 = protoChild1.instantiate(parent);\n        var child2 = protoChild2.instantiate(parent);\n\n        parent.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n        child1.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n        child2.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n\n        child1.unlink();\n        child1.link(parent);\n\n        var queryList = parent.get(NeedsQuery).query;\n        expectDirectives(queryList, CountingDirective, [0, 2, 1]);\n      });\n\n      it('should reflect moving an injector as a first child', () => {\n        var protoParent = new ProtoElementInjector(null, 0, [NeedsQuery, CountingDirective]);\n        var protoChild1 = new ProtoElementInjector(protoParent, 1, [CountingDirective]);\n        var protoChild2 = new ProtoElementInjector(protoParent, 1, [CountingDirective]);\n\n        var parent = protoParent.instantiate(null);\n        var child1 = protoChild1.instantiate(parent);\n        var child2 = protoChild2.instantiate(parent);\n\n        parent.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n        child1.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n        child2.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n\n        child2.unlink();\n        child2.linkAfter(parent, null);\n\n        var queryList = parent.get(NeedsQuery).query;\n        expectDirectives(queryList, CountingDirective, [0, 2, 1]);\n      });\n\n      it('should support two concurrent queries for the same directive', () => {\n        var protoGrandParent = new ProtoElementInjector(null, 0, [NeedsQuery]);\n        var protoParent = new ProtoElementInjector(null, 0, [NeedsQuery]);\n        var protoChild = new ProtoElementInjector(protoParent, 1, [CountingDirective]);\n\n        var grandParent = protoGrandParent.instantiate(null);\n        var parent = protoParent.instantiate(grandParent);\n        var child = protoChild.instantiate(parent);\n\n        grandParent.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n        parent.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n        child.instantiateDirectives(Injector.resolveAndCreate([]), null, null, preBuildObjects);\n\n        var queryList1 = grandParent.get(NeedsQuery).query;\n        var queryList2 = parent.get(NeedsQuery).query;\n\n        expectDirectives(queryList1, CountingDirective, [0]);\n        expectDirectives(queryList2, CountingDirective, [0]);\n\n        child.unlink();\n        expectDirectives(queryList1, CountingDirective, []);\n        expectDirectives(queryList2, CountingDirective, []);\n      });\n    });\n  });\n}\n\nclass ContextWithHandler {\n  handler;\n  constructor(handler) {\n    this.handler = handler;\n  }\n}\n\nclass FakeRenderer extends Renderer {\n  log:List;\n  constructor() {\n    super();\n    this.log = [];\n  }\n  setElementProperty(viewRef, elementIndex, propertyName, value) {\n    ListWrapper.push(this.log, [viewRef, elementIndex, propertyName, value]);\n  }\n\n}\n"]}