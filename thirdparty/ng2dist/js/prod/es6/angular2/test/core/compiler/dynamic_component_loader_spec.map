{"version":3,"sources":["dynamic_component_loader_spec.js"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/dynamic_component_loader_spec.es6","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  xdescribe,\n  describe,\n  el,\n  dispatchEvent,\n  expect,\n  iit,\n  inject,\n  beforeEachBindings,\n  it,\n  xit\n  } from 'angular2/test_lib';\n\nimport {TestBed} from 'angular2/src/test_lib/test_bed';\n\nimport {Component} from 'angular2/src/core/annotations_impl/annotations';\nimport {View} from 'angular2/src/core/annotations_impl/view';\nimport {DynamicComponentLoader} from 'angular2/src/core/compiler/dynamic_component_loader';\nimport {ElementRef} from 'angular2/src/core/compiler/element_ref';\nimport {If} from 'angular2/src/directives/if';\nimport {DirectDomRenderer} from 'angular2/src/render/dom/direct_dom_renderer';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\n\nexport function main() {\n  describe('DynamicComponentLoader', function () {\n    describe(\"loading into existing location\", () => {\n      it('should work', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<dynamic-comp #dynamic></dynamic-comp>',\n          directives: [DynamicComp]\n        }));\n\n        tb.createView(MyComp).then((view) => {\n          var dynamicComponent = view.rawView.locals.get(\"dynamic\");\n          expect(dynamicComponent).toBeAnInstanceOf(DynamicComp);\n\n          dynamicComponent.done.then((_) => {\n            view.detectChanges();\n            expect(view.rootNodes).toHaveText('hello');\n            async.done();\n          });\n        });\n      }));\n\n      it('should inject dependencies of the dynamically-loaded component', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<dynamic-comp #dynamic></dynamic-comp>',\n          directives: [DynamicComp]\n        }));\n\n        tb.createView(MyComp).then((view) => {\n          var dynamicComponent = view.rawView.locals.get(\"dynamic\");\n          dynamicComponent.done.then((ref) => {\n            expect(ref.instance.dynamicallyCreatedComponentService).toBeAnInstanceOf(DynamicallyCreatedComponentService);\n            async.done();\n          });\n        });\n      }));\n\n      it('should allow to destroy and create them via viewcontainer directives',\n        inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<div><dynamic-comp #dynamic template=\"if: ctxBoolProp\"></dynamic-comp></div>',\n            directives: [DynamicComp, If]\n          }));\n\n          tb.createView(MyComp).then((view) => {\n            view.context.ctxBoolProp = true;\n            view.detectChanges();\n            var dynamicComponent = view.rawView.viewContainers[0].views[0].locals.get(\"dynamic\");\n            dynamicComponent.done.then((_) => {\n              view.detectChanges();\n              expect(view.rootNodes).toHaveText('hello');\n\n              view.context.ctxBoolProp = false;\n              view.detectChanges();\n\n              expect(view.rawView.viewContainers[0].views.length).toBe(0);\n              expect(view.rootNodes).toHaveText('');\n\n              view.context.ctxBoolProp = true;\n              view.detectChanges();\n\n              var dynamicComponent = view.rawView.viewContainers[0].views[0].locals.get(\"dynamic\");\n              return dynamicComponent.done;\n            }).then((_) => {\n              view.detectChanges();\n              expect(view.rootNodes).toHaveText('hello');\n              async.done();\n            });\n          });\n        }));\n    });\n\n    describe(\"loading next to an existing location\", () => {\n      it('should work', inject([DynamicComponentLoader, TestBed, AsyncTestCompleter],\n        (loader, tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<div><location #loc></location></div>',\n            directives: [Location]\n          }));\n\n          tb.createView(MyComp).then((view) => {\n            var location = view.rawView.locals.get(\"loc\");\n\n            loader.loadNextToExistingLocation(DynamicallyLoaded, location.elementRef).then(ref => {\n              expect(view.rootNodes).toHaveText(\"Location;DynamicallyLoaded;\")\n              async.done();\n            });\n          });\n        }));\n\n      it('should return a disposable component ref', inject([DynamicComponentLoader, TestBed, AsyncTestCompleter],\n        (loader, tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<div><location #loc></location></div>',\n            directives: [Location]\n          }));\n\n          tb.createView(MyComp).then((view) => {\n            var location = view.rawView.locals.get(\"loc\");\n            loader.loadNextToExistingLocation(DynamicallyLoaded, location.elementRef).then(ref => {\n              loader.loadNextToExistingLocation(DynamicallyLoaded2, location.elementRef).then(ref2 => {\n                expect(view.rootNodes).toHaveText(\"Location;DynamicallyLoaded;DynamicallyLoaded2;\")\n\n                ref2.dispose();\n\n                expect(view.rootNodes).toHaveText(\"Location;DynamicallyLoaded;\")\n\n                async.done();\n              });\n            });\n          });\n        }));\n\n      it('should update host properties', inject([DynamicComponentLoader, TestBed, AsyncTestCompleter],\n        (loader, tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<div><location #loc></location></div>',\n            directives: [Location]\n          }));\n\n          tb.createView(MyComp).then((view) => {\n            var location = view.rawView.locals.get(\"loc\");\n\n            loader.loadNextToExistingLocation(DynamicallyLoadedWithHostProps, location.elementRef).then(ref => {\n              ref.instance.id = \"new value\";\n\n              view.detectChanges();\n\n              var newlyInsertedElement = DOM.childNodesAsList(view.rootNodes[0])[1];\n              expect(newlyInsertedElement.id).toEqual(\"new value\")\n\n              async.done();\n            });\n          });\n        }));\n    });\n\n    describe('loading into a new location', () => {\n      it('should allow to create, update and destroy components',\n          inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<imp-ng-cmp #impview></imp-ng-cmp>',\n          directives: [ImperativeViewComponentUsingNgComponent]\n        }));\n        tb.createView(MyComp).then((view) => {\n          var userViewComponent = view.rawView.locals.get(\"impview\");\n\n          userViewComponent.done.then((childComponentRef) => {\n            view.detectChanges();\n\n            expect(view.rootNodes).toHaveText('hello');\n\n            childComponentRef.instance.ctxProp = 'new';\n\n            view.detectChanges();\n\n            expect(view.rootNodes).toHaveText('new');\n\n            childComponentRef.dispose();\n\n            expect(view.rootNodes).toHaveText('');\n\n            async.done();\n          });\n        });\n      }));\n\n    });\n\n  });\n}\n\n@Component({\n  selector: 'imp-ng-cmp'\n})\n@View({\n  renderer: 'imp-ng-cmp-renderer'\n})\nclass ImperativeViewComponentUsingNgComponent {\n  done;\n\n  constructor(self:ElementRef, dynamicComponentLoader:DynamicComponentLoader, renderer:DirectDomRenderer) {\n    var div = el('<div></div>');\n    renderer.setImperativeComponentRootNodes(self.parentView.render, self.boundElementIndex, [div]);\n    this.done = dynamicComponentLoader.loadIntoNewLocation(ChildComp, self, div, null);\n  }\n}\n\n@Component({\n  selector: 'child-cmp',\n})\n@View({\n  template: '{{ctxProp}}'\n})\nclass ChildComp {\n  ctxProp:string;\n  constructor() {\n    this.ctxProp = 'hello';\n  }\n}\n\n\nclass DynamicallyCreatedComponentService {\n}\n\n@Component({\n  selector: 'dynamic-comp'\n})\nclass DynamicComp {\n  done;\n\n  constructor(loader:DynamicComponentLoader, location:ElementRef) {\n    this.done = loader.loadIntoExistingLocation(DynamicallyCreatedCmp, location);\n  }\n}\n\n@Component({\n  selector: 'hello-cmp',\n  injectables: [DynamicallyCreatedComponentService]\n})\n@View({\n  template: \"{{greeting}}\"\n})\nclass DynamicallyCreatedCmp {\n  greeting:string;\n  dynamicallyCreatedComponentService:DynamicallyCreatedComponentService;\n\n  constructor(a:DynamicallyCreatedComponentService) {\n    this.greeting = \"hello\";\n    this.dynamicallyCreatedComponentService = a;\n  }\n}\n\n@Component({selector: 'dummy'})\n@View({template: \"DynamicallyLoaded;\"})\nclass DynamicallyLoaded {\n}\n\n@Component({selector: 'dummy'})\n@View({template: \"DynamicallyLoaded2;\"})\nclass DynamicallyLoaded2 {\n}\n\n@Component({\n  selector: 'dummy',\n  hostProperties: {'id' : 'id'}\n})\n@View({template: \"DynamicallyLoadedWithHostProps;\"})\nclass DynamicallyLoadedWithHostProps {\n  id:string;\n\n  constructor() {\n    this.id = \"default\";\n  }\n}\n\n@Component({\n  selector: 'location'\n})\n@View({template: \"Location;\"})\nclass Location {\n  elementRef:ElementRef;\n\n  constructor(elementRef:ElementRef) {\n    this.elementRef = elementRef;\n  }\n}\n\n@Component({\n  selector: 'my-comp'\n})\n@View({\n  directives: []\n})\nclass MyComp {\n  ctxBoolProp:boolean;\n\n  constructor() {\n    this.ctxBoolProp = false;\n  }\n}\n"]}