{"version":3,"sources":["compiler_spec.js"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/compiler_spec.es6","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  xdescribe,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  IS_DARTIUM,\n  it,\n  SpyObject, proxy\n} from 'angular2/test_lib';\n\nimport {List, ListWrapper, Map, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\nimport {IMPLEMENTS, Type, isBlank, stringify, isPresent} from 'angular2/src/facade/lang';\nimport {PromiseWrapper, Promise} from 'angular2/src/facade/async';\n\nimport {Compiler, CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {AppProtoView} from 'angular2/src/core/compiler/view';\nimport {ElementBinder} from 'angular2/src/core/compiler/element_binder';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {Component, Directive} from 'angular2/src/core/annotations_impl/annotations';\nimport {Attribute} from 'angular2/src/core/annotations_impl/di';\nimport {View} from 'angular2/src/core/annotations_impl/view';\nimport {internalProtoView} from 'angular2/src/core/compiler/view_ref';\nimport {DirectiveBinding} from 'angular2/src/core/compiler/element_injector';\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\nimport {ComponentUrlMapper, RuntimeComponentUrlMapper} from 'angular2/src/core/compiler/component_url_mapper';\nimport {ProtoViewFactory} from 'angular2/src/core/compiler/proto_view_factory';\n\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport * as renderApi from 'angular2/src/render/api';\n// TODO(tbosch): Spys don't support named modules...\nimport {Renderer} from 'angular2/src/render/api';\n\nexport function main() {\n  describe('compiler', function() {\n    var reader, tplResolver, renderer, protoViewFactory, cmpUrlMapper, renderCompileRequests;\n\n    beforeEach(() => {\n      reader = new DirectiveMetadataReader();\n      tplResolver = new FakeTemplateResolver();\n      cmpUrlMapper = new RuntimeComponentUrlMapper();\n      renderer = new SpyRenderer();\n    });\n\n    function createCompiler(renderCompileResults:List, protoViewFactoryResults:List<AppProtoView>) {\n      var urlResolver = new FakeUrlResolver();\n      renderCompileRequests = [];\n      renderer.spy('compile').andCallFake( (template) => {\n        ListWrapper.push(renderCompileRequests, template);\n        return PromiseWrapper.resolve(ListWrapper.removeAt(renderCompileResults, 0));\n      });\n\n      protoViewFactory = new FakeProtoViewFactory(protoViewFactoryResults)\n      return new Compiler(\n        reader,\n        new CompilerCache(),\n        tplResolver,\n        cmpUrlMapper,\n        urlResolver,\n        renderer,\n        protoViewFactory\n      );\n    }\n\n    describe('serialize template', () => {\n\n      function captureTemplate(template:View):Promise<renderApi.ViewDefinition> {\n        tplResolver.setView(MainComponent, template);\n        var compiler = createCompiler([createRenderProtoView()], [createProtoView()]);\n        return compiler.compile(MainComponent).then( (_) => {\n          expect(renderCompileRequests.length).toBe(1);\n          return renderCompileRequests[0];\n        });\n      }\n\n      function captureDirective(directive):Promise<renderApi.DirectiveMetadata> {\n        return captureTemplate(new View({template: '<div></div>', directives: [directive]})).then( (renderTpl) => {\n          expect(renderTpl.directives.length).toBe(1);\n          return renderTpl.directives[0];\n        });\n      }\n\n      it('should fill the componentId', inject([AsyncTestCompleter], (async) => {\n        captureTemplate(new View({template: '<div></div>'})).then( (renderTpl) => {\n          expect(renderTpl.componentId).toEqual(stringify(MainComponent));\n          async.done();\n        });\n      }));\n\n      it('should fill inline template', inject([AsyncTestCompleter], (async) => {\n        captureTemplate(new View({template: '<div></div>'})).then( (renderTpl) => {\n          expect(renderTpl.template).toEqual('<div></div>');\n          async.done();\n        });\n      }));\n\n      it('should fill absUrl given inline templates', inject([AsyncTestCompleter], (async) => {\n        cmpUrlMapper.setComponentUrl(MainComponent, '/mainComponent');\n        captureTemplate(new View({template: '<div></div>'})).then( (renderTpl) => {\n          expect(renderTpl.absUrl).toEqual('http://www.app.com/mainComponent');\n          async.done();\n        });\n      }));\n\n      it('should not fill absUrl given no inline template or template url', inject([AsyncTestCompleter], (async) => {\n        cmpUrlMapper.setComponentUrl(MainComponent, '/mainComponent');\n        captureTemplate(new View({template: null, templateUrl: null})).then( (renderTpl) => {\n          expect(renderTpl.absUrl).toBe(null)\n          async.done();\n        });\n      }));\n\n      it('should fill absUrl given url template', inject([AsyncTestCompleter], (async) => {\n        cmpUrlMapper.setComponentUrl(MainComponent, '/mainComponent');\n        captureTemplate(new View({templateUrl: '/someTemplate'})).then( (renderTpl) => {\n          expect(renderTpl.absUrl).toEqual('http://www.app.com/mainComponent/someTemplate');\n          async.done();\n        });\n      }));\n\n      it('should fill directive.id', inject([AsyncTestCompleter], (async) => {\n        captureDirective(MainComponent).then( (renderDir) => {\n          expect(renderDir.id).toEqual(stringify(MainComponent));\n          async.done();\n        });\n      }));\n\n      it('should fill directive.selector', inject([AsyncTestCompleter], (async) => {\n        captureDirective(MainComponent).then( (renderDir) => {\n          expect(renderDir.selector).toEqual('main-comp');\n          async.done();\n        });\n      }));\n\n      it('should fill directive.type for components', inject([AsyncTestCompleter], (async) => {\n        captureDirective(MainComponent).then( (renderDir) => {\n          expect(renderDir.type).toEqual(renderApi.DirectiveMetadata.COMPONENT_TYPE);\n          async.done();\n        });\n      }));\n\n      it('should fill directive.type for dynamic components', inject([AsyncTestCompleter], (async) => {\n        captureDirective(SomeDynamicComponentDirective).then( (renderDir) => {\n          expect(renderDir.type).toEqual(renderApi.DirectiveMetadata.COMPONENT_TYPE);\n          async.done();\n        });\n      }));\n\n      it('should fill directive.type for decorator directives', inject([AsyncTestCompleter], (async) => {\n        captureDirective(SomeDirective).then( (renderDir) => {\n          expect(renderDir.type).toEqual(renderApi.DirectiveMetadata.DIRECTIVE_TYPE);\n          async.done();\n        });\n      }));\n\n      it('should set directive.compileChildren to false for other directives', inject([AsyncTestCompleter], (async) => {\n        captureDirective(MainComponent).then( (renderDir) => {\n          expect(renderDir.compileChildren).toEqual(true);\n          async.done();\n        });\n      }));\n\n      it('should set directive.compileChildren to true for decorator directives', inject([AsyncTestCompleter], (async) => {\n        captureDirective(SomeDirective).then( (renderDir) => {\n          expect(renderDir.compileChildren).toEqual(true);\n          async.done();\n        });\n      }));\n\n      it('should set directive.compileChildren to false for decorator directives', inject([AsyncTestCompleter], (async) => {\n        captureDirective(IgnoreChildrenDirective).then( (renderDir) => {\n          expect(renderDir.compileChildren).toEqual(false);\n          async.done();\n        });\n      }));\n\n      it('should set directive.hostListeners', inject([AsyncTestCompleter], (async) => {\n        captureDirective(DirectiveWithEvents).then( (renderDir) => {\n          expect(renderDir.hostListeners).toEqual(MapWrapper.createFromStringMap({\n            'someEvent': 'someAction'\n          }));\n          async.done();\n        });\n      }));\n\n      it('should set directive.hostProperties', inject([AsyncTestCompleter], (async) => {\n        captureDirective(DirectiveWithProperties).then( (renderDir) => {\n          expect(renderDir.hostProperties).toEqual(MapWrapper.createFromStringMap({\n            'someField': 'someProp'\n          }));\n          async.done();\n        });\n      }));\n\n      it('should set directive.bind', inject([AsyncTestCompleter], (async) => {\n        captureDirective(DirectiveWithBind).then( (renderDir) => {\n          expect(renderDir.properties).toEqual(MapWrapper.createFromStringMap({\n            'a': 'b'\n          }));\n          async.done();\n        });\n      }));\n\n      it('should read @Attribute', inject([AsyncTestCompleter], (async) => {\n        captureDirective(DirectiveWithAttributes).then( (renderDir) => {\n          expect(renderDir.readAttributes).toEqual(['someAttr']);\n          async.done();\n        });\n      }));\n    });\n\n    describe('call ProtoViewFactory', () => {\n\n      it('should pass the render protoView', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setView(MainComponent, new View({template: '<div></div>'}));\n        var renderProtoView = createRenderProtoView();\n        var expectedProtoView = createProtoView();\n        var compiler = createCompiler([renderProtoView], [expectedProtoView]);\n        compiler.compile(MainComponent).then( (_) => {\n          var request = protoViewFactory.requests[0];\n          expect(request[1]).toBe(renderProtoView);\n          async.done();\n        });\n      }));\n\n      it('should pass the component binding', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setView(MainComponent, new View({template: '<div></div>'}));\n        var compiler = createCompiler([createRenderProtoView()], [createProtoView()]);\n        compiler.compile(MainComponent).then( (_) => {\n          var request = protoViewFactory.requests[0];\n          expect(request[0].key.token).toBe(MainComponent);\n          async.done();\n        });\n      }));\n\n      it('should pass the directive bindings', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setView(MainComponent,\n          new View({\n            template: '<div></div>',\n            directives: [SomeDirective]\n          })\n        );\n        var compiler = createCompiler([createRenderProtoView()], [createProtoView()]);\n        compiler.compile(MainComponent).then( (_) => {\n          var request = protoViewFactory.requests[0];\n          var binding = request[2][0];\n          expect(binding.key.token).toBe(SomeDirective);\n          async.done();\n        });\n      }));\n\n      it('should use the protoView of the ProtoViewFactory', inject([AsyncTestCompleter], (async) => {\n        tplResolver.setView(MainComponent, new View({template: '<div></div>'}));\n        var renderProtoView = createRenderProtoView();\n        var expectedProtoView = createProtoView();\n        var compiler = createCompiler([renderProtoView], [expectedProtoView]);\n        compiler.compile(MainComponent).then( (protoViewRef) => {\n          expect(internalProtoView(protoViewRef)).toBe(expectedProtoView);\n          async.done();\n        });\n      }));\n\n    });\n\n    it('should load nested components', inject([AsyncTestCompleter], (async) => {\n      tplResolver.setView(MainComponent, new View({template: '<div></div>'}));\n      tplResolver.setView(NestedComponent, new View({template: '<div></div>'}));\n      var mainProtoView = createProtoView([\n        createComponentElementBinder(reader, NestedComponent)\n      ]);\n      var nestedProtoView = createProtoView();\n      var compiler = createCompiler(\n        [\n          createRenderProtoView([createRenderComponentElementBinder(0)]),\n          createRenderProtoView()\n        ],\n        [mainProtoView, nestedProtoView]\n      );\n      compiler.compile(MainComponent).then( (protoViewRef) => {\n        expect(internalProtoView(protoViewRef)).toBe(mainProtoView);\n        expect(mainProtoView.elementBinders[0].nestedProtoView).toBe(nestedProtoView);\n        async.done();\n      });\n    }));\n\n    it('should load nested components in viewcontainers', inject([AsyncTestCompleter], (async) => {\n      tplResolver.setView(MainComponent, new View({template: '<div></div>'}));\n      tplResolver.setView(NestedComponent, new View({template: '<div></div>'}));\n      var mainProtoView = createProtoView([\n        createViewportElementBinder(null)\n      ]);\n      var viewportProtoView = createProtoView([\n        createComponentElementBinder(reader, NestedComponent)\n      ]);\n      var nestedProtoView = createProtoView();\n      var compiler = createCompiler(\n        [\n          createRenderProtoView([\n            createRenderViewportElementBinder(\n              createRenderProtoView([\n                createRenderComponentElementBinder(0)\n              ])\n            )\n          ]),\n          createRenderProtoView()\n        ],\n        [mainProtoView, viewportProtoView, nestedProtoView]\n      );\n      compiler.compile(MainComponent).then( (protoViewRef) => {\n        expect(internalProtoView(protoViewRef)).toBe(mainProtoView);\n        expect(mainProtoView.elementBinders[0].nestedProtoView).toBe(viewportProtoView);\n        expect(viewportProtoView.elementBinders[0].nestedProtoView).toBe(nestedProtoView);\n\n        async.done();\n      });\n    }));\n\n    it('should cache compiled components', inject([AsyncTestCompleter], (async) => {\n      tplResolver.setView(MainComponent, new View({template: '<div></div>'}));\n      var renderProtoView = createRenderProtoView();\n      var expectedProtoView = createProtoView();\n      var compiler = createCompiler([renderProtoView], [expectedProtoView]);\n      compiler.compile(MainComponent).then( (protoViewRef) => {\n        expect(internalProtoView(protoViewRef)).toBe(expectedProtoView);\n        return compiler.compile(MainComponent);\n      }).then( (protoViewRef) => {\n        expect(internalProtoView(protoViewRef)).toBe(expectedProtoView);\n        async.done();\n      });\n    }));\n\n    it('should re-use components being compiled', inject([AsyncTestCompleter], (async) => {\n      tplResolver.setView(MainComponent, new View({template: '<div></div>'}));\n      var renderProtoViewCompleter = PromiseWrapper.completer();\n      var expectedProtoView = createProtoView();\n      var compiler = createCompiler([renderProtoViewCompleter.promise], [expectedProtoView]);\n      renderProtoViewCompleter.resolve(createRenderProtoView());\n      PromiseWrapper.all([\n        compiler.compile(MainComponent),\n        compiler.compile(MainComponent)\n      ]).then( (protoViewRefs) => {\n        expect(internalProtoView(protoViewRefs[0])).toBe(expectedProtoView);\n        expect(internalProtoView(protoViewRefs[1])).toBe(expectedProtoView);\n        async.done();\n      });\n    }));\n\n    it('should allow recursive components', inject([AsyncTestCompleter], (async) => {\n      tplResolver.setView(MainComponent, new View({template: '<div></div>'}));\n      var mainProtoView = createProtoView([\n        createComponentElementBinder(reader, MainComponent)\n      ]);\n      var compiler = createCompiler(\n        [createRenderProtoView([\n          createRenderComponentElementBinder(0)\n        ])],\n        [mainProtoView]\n      );\n      compiler.compile(MainComponent).then( (protoViewRef) => {\n        expect(internalProtoView(protoViewRef)).toBe(mainProtoView);\n        expect(mainProtoView.elementBinders[0].nestedProtoView).toBe(mainProtoView);\n        async.done();\n      });\n    }));\n\n    it('should create host proto views', inject([AsyncTestCompleter], (async) => {\n      renderer.spy('createHostProtoView').andCallFake( (componentId) => {\n        return PromiseWrapper.resolve(\n          createRenderProtoView([createRenderComponentElementBinder(0)])\n        );\n      });\n      tplResolver.setView(MainComponent, new View({template: '<div></div>'}));\n      var rootProtoView = createProtoView([\n        createComponentElementBinder(reader, MainComponent)\n      ]);\n      var mainProtoView = createProtoView();\n      var compiler = createCompiler(\n        [\n          createRenderProtoView()\n        ],\n        [rootProtoView, mainProtoView]\n      );\n      compiler.compileInHost(MainComponent).then( (protoViewRef) => {\n        expect(internalProtoView(protoViewRef)).toBe(rootProtoView);\n        expect(rootProtoView.elementBinders[0].nestedProtoView).toBe(mainProtoView);\n        async.done();\n      });\n    }));\n\n    it('should create imperative proto views', inject([AsyncTestCompleter], (async) => {\n      renderer.spy('createImperativeComponentProtoView').andCallFake( (rendererId) => {\n        return PromiseWrapper.resolve(\n          createRenderProtoView([])\n        );\n      });\n      tplResolver.setView(MainComponent, new View({renderer: 'some-renderer'}));\n      var mainProtoView = createProtoView();\n      var compiler = createCompiler(\n        [],\n        [mainProtoView]\n      );\n      compiler.compile(MainComponent).then( (protoViewRef) => {\n        expect(internalProtoView(protoViewRef)).toBe(mainProtoView);\n        expect(renderer.spy('createImperativeComponentProtoView')).toHaveBeenCalledWith('some-renderer');\n        async.done();\n      });\n    }));\n\n    it('should throw for non component types', () => {\n      var compiler = createCompiler([], []);\n      expect(\n        () => compiler.compile(SomeDirective)\n      ).toThrowError(`Could not load '${stringify(SomeDirective)}' because it is not a component.`);\n    });\n  });\n}\n\nfunction createDirectiveBinding(reader, type) {\n  var meta = reader.read(type);\n  return DirectiveBinding.createFromType(meta.type, meta.annotation);\n}\n\nfunction createProtoView(elementBinders = null) {\n  var pv = new AppProtoView(null, null, null, null, null);\n  if (isBlank(elementBinders)) {\n    elementBinders = [];\n  }\n  pv.elementBinders = elementBinders;\n  return pv;\n}\n\nfunction createComponentElementBinder(reader, type) {\n  var binding = createDirectiveBinding(reader, type);\n  return new ElementBinder(\n    0, null, 0,\n    null, binding\n  );\n}\n\nfunction createViewportElementBinder(nestedProtoView) {\n  var elBinder = new ElementBinder(\n    0, null, 0,\n    null, null\n  );\n  elBinder.nestedProtoView = nestedProtoView;\n  return elBinder;\n}\n\nfunction createRenderProtoView(elementBinders = null) {\n  if (isBlank(elementBinders)) {\n    elementBinders = [];\n  }\n  return new renderApi.ProtoViewDto({\n    elementBinders: elementBinders\n  });\n}\n\nfunction createRenderComponentElementBinder(directiveIndex) {\n  return new renderApi.ElementBinder({\n    directives: [new renderApi.DirectiveBinder({\n      directiveIndex: directiveIndex\n    })]\n  });\n}\n\nfunction createRenderViewportElementBinder(nestedProtoView) {\n  return new renderApi.ElementBinder({\n    nestedProtoView: nestedProtoView\n  });\n}\n\n@Component({\n  selector: 'main-comp'\n})\nclass MainComponent {}\n\n@Component()\nclass NestedComponent {}\n\nclass RecursiveComponent {}\n\n@Component()\nclass SomeDynamicComponentDirective {}\n\n@Directive()\nclass SomeDirective {}\n\n@Directive({\n  compileChildren: false\n})\nclass IgnoreChildrenDirective {}\n\n@Directive({\n  hostListeners: {'someEvent': 'someAction'}\n})\nclass DirectiveWithEvents {}\n\n@Directive({\n  hostProperties: {'someField': 'someProp'}\n})\nclass DirectiveWithProperties {}\n\n@Directive({\n  properties: {'a': 'b'}\n})\nclass DirectiveWithBind {}\n\n@Directive()\nclass DirectiveWithAttributes {\n  constructor(@Attribute('someAttr') someAttr:String) {}\n}\n\n@proxy\n@IMPLEMENTS(Renderer)\nclass SpyRenderer extends SpyObject {\n  constructor(){super(Renderer);}\n  noSuchMethod(m){return super.noSuchMethod(m)}\n}\n\nclass FakeUrlResolver extends UrlResolver {\n  constructor() {\n    super();\n  }\n\n  resolve(baseUrl: string, url: string): string {\n    if (baseUrl === null && url == './') {\n      return 'http://www.app.com';\n    }\n\n    return baseUrl + url;\n  }\n}\n\n\nclass FakeTemplateResolver extends TemplateResolver {\n  _cmpTemplates: Map;\n\n  constructor() {\n    super();\n    this._cmpTemplates = MapWrapper.create();\n  }\n\n  resolve(component: Type): View {\n    var template = MapWrapper.get(this._cmpTemplates, component);\n    if (isBlank(template)) {\n      // dynamic component\n      return null;\n    }\n    return template;\n  }\n\n  setView(component: Type, template: View) {\n    MapWrapper.set(this._cmpTemplates, component, template);\n  }\n}\n\nclass FakeProtoViewFactory extends ProtoViewFactory {\n  requests:List;\n  _results:List;\n\n  constructor(results) {\n    super(null);\n    this.requests = [];\n    this._results = results;\n  }\n\n  createProtoView(parentProtoView, componentBinding:DirectiveBinding, renderProtoView: renderApi.ProtoViewDto,\n                  directives:List<DirectiveBinding>):AppProtoView {\n    ListWrapper.push(this.requests, [componentBinding, renderProtoView, directives]);\n    return ListWrapper.removeAt(this._results, 0);\n  }\n}\n"]}