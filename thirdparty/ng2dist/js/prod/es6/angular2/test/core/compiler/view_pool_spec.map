{"version":3,"sources":["view_pool_spec.js"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/view_pool_spec.es6","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  xdescribe,\n  describe,\n  el,\n  dispatchEvent,\n  expect,\n  iit,\n  inject,\n  beforeEachBindings,\n  it,\n  xit,\n  SpyObject, proxy\n} from 'angular2/test_lib';\nimport {AppViewPool} from 'angular2/src/core/compiler/view_pool';\nimport {AppProtoView, AppView} from 'angular2/src/core/compiler/view';\nimport {MapWrapper, Map} from 'angular2/src/facade/collection';\n\nexport function main() {\n  describe('AppViewPool', () => {\n\n    function createViewPool({capacity}):AppViewPool {\n      return new AppViewPool(capacity);\n    }\n\n    function createProtoView() {\n      return new AppProtoView(null, null, null, null, null);\n    }\n\n    function createView(pv) {\n      return new AppView(null, pv, MapWrapper.create());\n    }\n\n    it('should support multiple AppProtoViews', () => {\n      var vf = createViewPool({ capacity: 2 });\n      var pv1 = createProtoView();\n      var pv2 = createProtoView();\n      var view1 = createView(pv1);\n      var view2 = createView(pv2);\n      vf.returnView(view1);\n      vf.returnView(view2);\n\n      expect(vf.getView(pv1)).toBe(view1);\n      expect(vf.getView(pv2)).toBe(view2);\n    });\n\n    it('should reuse the newest view that has been returned', () => {\n      var pv = createProtoView();\n      var vf = createViewPool({ capacity: 2 });\n      var view1 = createView(pv);\n      var view2 = createView(pv);\n      vf.returnView(view1);\n      vf.returnView(view2);\n\n      expect(vf.getView(pv)).toBe(view2);\n    });\n\n    it('should not add views when the capacity has been reached', () => {\n      var pv = createProtoView();\n      var vf = createViewPool({ capacity: 2 });\n      var view1 = createView(pv);\n      var view2 = createView(pv);\n      var view3 = createView(pv);\n      vf.returnView(view1);\n      vf.returnView(view2);\n      vf.returnView(view3);\n\n      expect(vf.getView(pv)).toBe(view2);\n      expect(vf.getView(pv)).toBe(view1);\n    });\n\n  });\n}\n"]}