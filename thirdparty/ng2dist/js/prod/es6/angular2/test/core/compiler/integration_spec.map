{"version":3,"sources":["integration_spec.js"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/integration_spec.es6","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  xdescribe,\n  describe,\n  el,\n  dispatchEvent,\n  expect,\n  iit,\n  inject,\n  beforeEachBindings,\n  it,\n  xit\n} from 'angular2/test_lib';\n\n\nimport {TestBed} from 'angular2/src/test_lib/test_bed';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Type, isPresent, BaseException, assertionsEnabled, isJsObject, global} from 'angular2/src/facade/lang';\nimport {PromiseWrapper, EventEmitter, ObservableWrapper} from 'angular2/src/facade/async';\n\nimport {Injector, bind} from 'angular2/di';\nimport {PipeRegistry, defaultPipeRegistry,\n  ChangeDetection, DynamicChangeDetection, Pipe, ChangeDetectorRef, ON_PUSH} from 'angular2/change_detection';\n\nimport {Directive, Component} from 'angular2/src/core/annotations_impl/annotations';\nimport {View} from 'angular2/src/core/annotations_impl/view';\nimport {Parent, Ancestor} from 'angular2/src/core/annotations_impl/visibility';\nimport {Attribute} from 'angular2/src/core/annotations_impl/di';\n\nimport {If} from 'angular2/src/directives/if';\n\nimport {ViewContainerRef} from 'angular2/src/core/compiler/view_container_ref';\nimport {ProtoViewRef} from 'angular2/src/core/compiler/view_ref';\nimport {Compiler} from 'angular2/src/core/compiler/compiler';\nimport {ElementRef} from 'angular2/src/core/compiler/element_ref';\n\nimport {DirectDomRenderer} from 'angular2/src/render/dom/direct_dom_renderer';\n\nexport function main() {\n  describe('integration tests', function() {\n    var ctx;\n\n    beforeEach( () => {\n      ctx = new MyComp();\n    });\n\n\n    describe('react to record changes', function() {\n      it('should consume text node changes', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div>{{ctxProp}}</div>'}));\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          ctx.ctxProp = 'Hello World!';\n\n          view.detectChanges();\n          expect(DOM.getInnerHTML(view.rootNodes[0])).toEqual('Hello World!');\n          async.done();\n        });\n      }));\n\n      it('should consume element binding changes', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div [id]=\"ctxProp\"></div>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Hello World!';\n          view.detectChanges();\n\n          expect(view.rootNodes[0].id).toEqual('Hello World!');\n          async.done();\n        });\n      }));\n\n      it('should consume binding to aria-* attributes', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div [attr.aria-label]=\"ctxProp\"></div>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Initial aria label';\n          view.detectChanges();\n          expect(DOM.getAttribute(view.rootNodes[0], 'aria-label')).toEqual('Initial aria label');\n\n          ctx.ctxProp = 'Changed aria label';\n          view.detectChanges();\n          expect(DOM.getAttribute(view.rootNodes[0], 'aria-label')).toEqual('Changed aria label');\n\n          async.done();\n        });\n      }));\n\n      it('should consume binding to property names where attr name and property name do not match', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div [tabindex]=\"ctxNumProp\"></div>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          view.detectChanges();\n          expect(view.rootNodes[0].tabIndex).toEqual(0);\n\n          ctx.ctxNumProp = 5;\n          view.detectChanges();\n          expect(view.rootNodes[0].tabIndex).toEqual(5);\n\n          async.done();\n        });\n      }));\n\n      it('should consume binding to camel-cased properties using dash-cased syntax in templates', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<input [read-only]=\"ctxBoolProp\">'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          view.detectChanges();\n          expect(view.rootNodes[0].readOnly).toBeFalsy();\n\n          ctx.ctxBoolProp = true;\n          view.detectChanges();\n          expect(view.rootNodes[0].readOnly).toBeTruthy();\n\n          async.done();\n        });\n      }));\n\n      it('should consume binding to inner-html', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div inner-html=\"{{ctxProp}}\"></div>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Some <span>HTML</span>';\n          view.detectChanges();\n          expect(DOM.getInnerHTML(view.rootNodes[0])).toEqual('Some <span>HTML</span>');\n\n          ctx.ctxProp = 'Some other <div>HTML</div>';\n          view.detectChanges();\n          expect(DOM.getInnerHTML(view.rootNodes[0])).toEqual('Some other <div>HTML</div>');\n\n          async.done();\n        });\n      }));\n\n      it('should ignore bindings to unknown properties', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div unknown=\"{{ctxProp}}\"></div>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Some value';\n          view.detectChanges();\n          expect(DOM.hasProperty(view.rootNodes[0], 'unknown')).toBeFalsy();\n\n          async.done();\n        });\n      }));\n\n      it('should consume directive watch expression change.', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var tpl =\n          '<div>' +\n            '<div my-dir [elprop]=\"ctxProp\"></div>' +\n            '<div my-dir elprop=\"Hi there!\"></div>' +\n            '<div my-dir elprop=\"Hi {{\\'there!\\'}}\"></div>' +\n            '<div my-dir elprop=\"One more {{ctxProp}}\"></div>' +\n          '</div>'\n        tb.overrideView(MyComp, new View({template: tpl, directives: [MyDir]}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Hello World!';\n          view.detectChanges();\n\n          expect(view.rawView.elementInjectors[0].get(MyDir).dirProp).toEqual('Hello World!');\n          expect(view.rawView.elementInjectors[1].get(MyDir).dirProp).toEqual('Hi there!');\n          expect(view.rawView.elementInjectors[2].get(MyDir).dirProp).toEqual('Hi there!');\n          expect(view.rawView.elementInjectors[3].get(MyDir).dirProp).toEqual('One more Hello World!');\n          async.done();\n        });\n      }));\n\n      describe('pipes', () => {\n        beforeEachBindings(() => {\n          return [bind(ChangeDetection).toFactory(\n            () => new DynamicChangeDetection(new PipeRegistry({\n                \"double\" : [new DoublePipeFactory()]\n              })),\n            []\n          )];\n        });\n\n        it(\"should support pipes in bindings and bind config\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          tb.overrideView(MyComp,\n            new View({\n              template: '<component-with-pipes #comp [prop]=\"ctxProp | double\"></component-with-pipes>',\n              directives: [ComponentWithPipes]\n            }));\n\n          tb.createView(MyComp, {context: ctx}).then((view) => {\n            ctx.ctxProp = 'a';\n            view.detectChanges();\n\n            var comp = view.rawView.locals.get(\"comp\");\n\n            // it is doubled twice: once in the binding, second time in the bind config\n            expect(comp.prop).toEqual('aaaa');\n            async.done();\n          });\n        }));\n      });\n\n      it('should support nested components.', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<child-cmp></child-cmp>',\n          directives: [ChildComp]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          view.detectChanges();\n\n          expect(view.rootNodes).toHaveText('hello');\n          async.done();\n        });\n      }));\n\n      // GH issue 328 - https://github.com/angular/angular/issues/328\n      it('should support different directive types on a single node', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({\n            template: '<child-cmp my-dir [elprop]=\"ctxProp\"></child-cmp>',\n            directives: [MyDir, ChildComp]\n          }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Hello World!';\n          view.detectChanges();\n\n          var elInj = view.rawView.elementInjectors[0];\n          expect(elInj.get(MyDir).dirProp).toEqual('Hello World!');\n          expect(elInj.get(ChildComp).dirProp).toEqual(null);\n\n          async.done();\n        });\n      }));\n\n      it('should support directives where a binding attribute is not given', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({\n            // No attribute \"el-prop\" specified.\n            template: '<p my-dir></p>',\n            directives: [MyDir]\n          }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          async.done();\n        });\n      }));\n\n      it('should support directives where a selector matches property binding', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({\n            template: '<p [id]=\"ctxProp\"></p>',\n            directives: [IdDir]\n          }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          var idDir = view.rawView.elementInjectors[0].get(IdDir);\n\n          ctx.ctxProp = 'some_id';\n          view.detectChanges();\n          expect(idDir.id).toEqual('some_id');\n\n          ctx.ctxProp = 'other_id';\n          view.detectChanges();\n          expect(idDir.id).toEqual('other_id');\n\n          async.done();\n        });\n      }));\n\n      it('should allow specifying directives as bindings', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<child-cmp></child-cmp>',\n          directives: [bind(ChildComp).toClass(ChildComp)]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          view.detectChanges();\n\n          expect(view.rootNodes).toHaveText('hello');\n          async.done();\n        });\n      }));\n\n      it('should read directives metadata from their binding token', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<div public-api><div needs-public-api></div></div>',\n          directives: [bind(PublicApi).toClass(PrivateImpl), NeedsPublicApi]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          async.done();\n        });\n      }));\n\n      it('should support template directives via `<template>` elements.', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({\n            template: '<div><template some-viewport var-greeting=\"some-tmpl\"><copy-me>{{greeting}}</copy-me></template></div>',\n            directives: [SomeViewport]\n          }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          view.detectChanges();\n\n          var childNodesOfWrapper = view.rootNodes[0].childNodes;\n          // 1 template + 2 copies.\n          expect(childNodesOfWrapper.length).toBe(3);\n          expect(childNodesOfWrapper[1].childNodes[0].nodeValue).toEqual('hello');\n          expect(childNodesOfWrapper[2].childNodes[0].nodeValue).toEqual('again');\n          async.done();\n        });\n      }));\n\n      it('should support template directives via `template` attribute.', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<div><copy-me template=\"some-viewport: var greeting=some-tmpl\">{{greeting}}</copy-me></div>',\n          directives: [SomeViewport]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          view.detectChanges();\n\n          var childNodesOfWrapper = view.rootNodes[0].childNodes;\n          // 1 template + 2 copies.\n          expect(childNodesOfWrapper.length).toBe(3);\n          expect(childNodesOfWrapper[1].childNodes[0].nodeValue).toEqual('hello');\n          expect(childNodesOfWrapper[2].childNodes[0].nodeValue).toEqual('again');\n          async.done();\n        });\n      }));\n\n      it('should assign the component instance to a var-', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<p><child-cmp var-alice></child-cmp></p>',\n          directives: [ChildComp]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          expect(view.rawView.locals).not.toBe(null);\n          expect(view.rawView.locals.get('alice')).toBeAnInstanceOf(ChildComp);\n\n          async.done();\n        })\n      }));\n\n      it('should assign two component instances each with a var-', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<p><child-cmp var-alice></child-cmp><child-cmp var-bob></p>',\n          directives: [ChildComp]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          expect(view.rawView.locals).not.toBe(null);\n          expect(view.rawView.locals.get('alice')).toBeAnInstanceOf(ChildComp);\n          expect(view.rawView.locals.get('bob')).toBeAnInstanceOf(ChildComp);\n          expect(view.rawView.locals.get('alice')).not.toBe(view.rawView.locals.get('bob'));\n\n          async.done();\n        })\n      }));\n\n      it('should assign the component instance to a var- with shorthand syntax', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<child-cmp #alice></child-cmp>',\n          directives: [ChildComp]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          expect(view.rawView.locals).not.toBe(null);\n          expect(view.rawView.locals.get('alice')).toBeAnInstanceOf(ChildComp);\n\n          async.done();\n        })\n      }));\n\n      it('should assign the element instance to a user-defined variable', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({template: '<p><div var-alice><i>Hello</i></div></p>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          expect(view.rawView.locals).not.toBe(null);\n\n          var value = view.rawView.locals.get('alice');\n          expect(value).not.toBe(null);\n          expect(value.tagName.toLowerCase()).toEqual('div');\n\n          async.done();\n        })\n      }));\n\n\n      it('should assign the element instance to a user-defined variable with camelCase using dash-case', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({template: '<p><div var-super-alice><i>Hello</i></div></p>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          expect(view.rawView.locals).not.toBe(null);\n\n          var value = view.rawView.locals.get('superAlice');\n          expect(value).not.toBe(null);\n          expect(value.tagName.toLowerCase()).toEqual('div');\n\n          async.done();\n        })\n      }));\n\n      describe(\"ON_PUSH components\", () => {\n        it(\"should use ChangeDetectorRef to manually request a check\",\n          inject([TestBed, AsyncTestCompleter], (tb, async) => {\n\n          tb.overrideView(MyComp, new View({\n            template: '<push-cmp-with-ref #cmp></push-cmp-with-ref>',\n            directives: [[[PushCmpWithRef]]]\n          }));\n\n          tb.createView(MyComp, {context: ctx}).then((view) => {\n\n            var cmp = view.rawView.locals.get('cmp');\n\n            view.detectChanges();\n            expect(cmp.numberOfChecks).toEqual(1);\n\n            view.detectChanges();\n            expect(cmp.numberOfChecks).toEqual(1);\n\n            cmp.propagate();\n\n            view.detectChanges();\n            expect(cmp.numberOfChecks).toEqual(2);\n            async.done();\n          })\n        }));\n\n        it(\"should be checked when its bindings got updated\",\n          inject([TestBed, AsyncTestCompleter], (tb, async) => {\n\n          tb.overrideView(MyComp, new View({\n            template: '<push-cmp [prop]=\"ctxProp\" #cmp></push-cmp>',\n            directives: [[[PushCmp]]]\n          }));\n\n          tb.createView(MyComp, {context: ctx}).then((view) => {\n            var cmp = view.rawView.locals.get('cmp');\n\n            ctx.ctxProp = \"one\";\n            view.detectChanges();\n            expect(cmp.numberOfChecks).toEqual(1);\n\n            ctx.ctxProp = \"two\";\n            view.detectChanges();\n            expect(cmp.numberOfChecks).toEqual(2);\n\n            async.done();\n          })\n        }));\n\n        it('should not affect updating properties on the component', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<push-cmp-with-ref [prop]=\"ctxProp\" #cmp></push-cmp-with-ref>',\n            directives: [[[PushCmpWithRef]]]\n          }));\n\n          tb.createView(MyComp, {context: ctx}).then((view) => {\n\n            var cmp = view.rawView.locals.get('cmp');\n\n            ctx.ctxProp = \"one\";\n            view.detectChanges();\n            expect(cmp.prop).toEqual(\"one\");\n\n            ctx.ctxProp = \"two\";\n            view.detectChanges();\n            expect(cmp.prop).toEqual(\"two\");\n\n            async.done();\n          })\n        }));\n      });\n\n      it('should create a component that injects a @Parent', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<some-directive><cmp-with-parent #child></cmp-with-parent></some-directive>',\n          directives: [SomeDirective, CompWithParent]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          var childComponent = view.rawView.locals.get('child');\n          expect(childComponent.myParent).toBeAnInstanceOf(SomeDirective);\n\n          async.done();\n        })\n      }));\n\n      it('should create a component that injects an @Ancestor', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: `\n            <some-directive>\n              <p>\n                <cmp-with-ancestor #child></cmp-with-ancestor>\n              </p>\n            </some-directive>`,\n          directives: [SomeDirective, CompWithAncestor]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          var childComponent = view.rawView.locals.get('child');\n          expect(childComponent.myAncestor).toBeAnInstanceOf(SomeDirective);\n\n          async.done();\n        })\n      }));\n\n      it('should create a component that injects an @Ancestor through viewcontainer directive', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: `\n            <some-directive>\n              <p *if=\"true\">\n                <cmp-with-ancestor #child></cmp-with-ancestor>\n              </p>\n            </some-directive>`,\n          directives: [SomeDirective, CompWithAncestor, If]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          view.detectChanges();\n\n          var subview = view.rawView.viewContainers[1].views[0];\n          var childComponent = subview.locals.get('child');\n          expect(childComponent.myAncestor).toBeAnInstanceOf(SomeDirective);\n\n          async.done();\n        });\n      }));\n\n      it('should support events via EventEmitter', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<div emitter listener></div>',\n          directives: [DirectiveEmitingEvent, DirectiveListeningEvent]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          var injector = view.rawView.elementInjectors[0];\n\n          var emitter = injector.get(DirectiveEmitingEvent);\n          var listener = injector.get(DirectiveListeningEvent);\n\n          expect(listener.msg).toEqual('');\n\n          emitter.fireEvent('fired !');\n\n          PromiseWrapper.setTimeout(() => {\n            expect(listener.msg).toEqual('fired !');\n            async.done();\n          }, 0);\n        });\n      }));\n\n      it('should support render events', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<div listener></div>',\n          directives: [DirectiveListeningDomEvent]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          var injector = view.rawView.elementInjectors[0];\n\n          var listener = injector.get(DirectiveListeningDomEvent);\n\n          dispatchEvent(view.rootNodes[0], 'domEvent');\n\n          expect(listener.eventType).toEqual('domEvent');\n\n          async.done();\n        });\n      }));\n\n      it('should support render global events', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<div listener></div>',\n          directives: [DirectiveListeningDomEvent]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          var injector = view.rawView.elementInjectors[0];\n\n          var listener = injector.get(DirectiveListeningDomEvent);\n          dispatchEvent(DOM.getGlobalEventTarget(\"window\"), 'domEvent');\n          expect(listener.eventType).toEqual('window_domEvent');\n\n          listener = injector.get(DirectiveListeningDomEvent);\n          dispatchEvent(DOM.getGlobalEventTarget(\"document\"), 'domEvent');\n          expect(listener.eventType).toEqual('document_domEvent');\n\n          view.destroy();\n          listener = injector.get(DirectiveListeningDomEvent);\n          dispatchEvent(DOM.getGlobalEventTarget(\"body\"), 'domEvent');\n          expect(listener.eventType).toEqual('');\n\n          async.done();\n        });\n      }));\n\n      it('should support updating host element via hostProperties', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<div update-host-properties></div>',\n          directives: [DirectiveUpdatingHostProperties]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          var injector = view.rawView.elementInjectors[0];\n          var updateHost = injector.get(DirectiveUpdatingHostProperties);\n\n          updateHost.id = \"newId\";\n\n          view.detectChanges();\n\n          expect(view.rootNodes[0].id).toEqual(\"newId\");\n\n          async.done();\n        });\n      }));\n\n      if (DOM.supportsDOMEvents()) {\n        it('should support preventing default on render events', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<input type=\"checkbox\" listenerprevent></input><input type=\"checkbox\" listenernoprevent></input>',\n            directives: [DirectiveListeningDomEventPrevent, DirectiveListeningDomEventNoPrevent]\n          }));\n\n          tb.createView(MyComp, {context: ctx}).then((view) => {\n            expect(DOM.getChecked(view.rootNodes[0])).toBeFalsy();\n            expect(DOM.getChecked(view.rootNodes[1])).toBeFalsy();\n            DOM.dispatchEvent(view.rootNodes[0], DOM.createMouseEvent('click'));\n            DOM.dispatchEvent(view.rootNodes[1], DOM.createMouseEvent('click'));\n            expect(DOM.getChecked(view.rootNodes[0])).toBeFalsy();\n            expect(DOM.getChecked(view.rootNodes[1])).toBeTruthy();\n            async.done();\n          });\n        }));\n      }\n\n      it('should support render global events from multiple directives', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<div *if=\"ctxBoolProp\" listener listenerother></div>',\n          directives: [If, DirectiveListeningDomEvent, DirectiveListeningDomEventOther]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          globalCounter = 0;\n          ctx.ctxBoolProp = true;\n          view.detectChanges();\n\n          var subview = view.rawView.viewContainers[0].views[0];\n          var injector = subview.elementInjectors[0];\n          var listener = injector.get(DirectiveListeningDomEvent);\n          var listenerother = injector.get(DirectiveListeningDomEventOther);\n          dispatchEvent(DOM.getGlobalEventTarget(\"window\"), 'domEvent');\n          expect(listener.eventType).toEqual('window_domEvent');\n          expect(listenerother.eventType).toEqual('other_domEvent');\n          expect(globalCounter).toEqual(1);\n\n          ctx.ctxBoolProp = false;\n          view.detectChanges();\n          dispatchEvent(DOM.getGlobalEventTarget(\"window\"), 'domEvent');\n          expect(globalCounter).toEqual(1);\n\n          ctx.ctxBoolProp = true;\n          view.detectChanges();\n          dispatchEvent(DOM.getGlobalEventTarget(\"window\"), 'domEvent');\n          expect(globalCounter).toEqual(2);\n\n          async.done();\n        });\n      }));\n\n      describe('dynamic ViewContainers', () => {\n\n        it('should allow to create a ViewContainerRef at any bound location',\n            inject([TestBed, AsyncTestCompleter, Compiler], (tb, async, compiler) => {\n          tb.overrideView(MyComp, new View({\n            template: '<div><dynamic-vp #dynamic></dynamic-vp></div>',\n            directives: [DynamicViewport]\n          }));\n\n          tb.createView(MyComp).then((view) => {\n            var dynamicVp = view.rawView.elementInjectors[0].get(DynamicViewport);\n            dynamicVp.done.then( (_) => {\n              view.detectChanges();\n              expect(view.rootNodes).toHaveText('dynamic greet');\n              async.done();\n            });\n          });\n        }));\n\n      });\n\n      it('should support static attributes', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<input static type=\"text\" title>',\n          directives: [NeedsAttribute]\n        }));\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          var injector = view.rawView.elementInjectors[0];\n          var needsAttribute = injector.get(NeedsAttribute);\n          expect(needsAttribute.typeAttribute).toEqual('text');\n          expect(needsAttribute.titleAttribute).toEqual('');\n          expect(needsAttribute.fooAttribute).toEqual(null);\n\n          async.done();\n        });\n      }));\n    });\n\n    describe(\"error handling\", () => {\n\n      it('should specify a location of an error that happened during change detection (text)',\n        inject([TestBed, AsyncTestCompleter], (tb, async) => {\n\n        tb.overrideView(MyComp, new View({\n          template: '{{a.b}}'\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          expect(() => view.detectChanges()).toThrowError(new RegExp('{{a.b}} in MyComp'));\n          async.done();\n        })\n      }));\n\n      it('should specify a location of an error that happened during change detection (element property)',\n        inject([TestBed, AsyncTestCompleter], (tb, async) => {\n\n        tb.overrideView(MyComp, new View({\n          template: '<div [prop]=\"a.b\"></div>'\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          expect(() => view.detectChanges()).toThrowError(new RegExp('a.b in MyComp'));\n          async.done();\n        })\n      }));\n\n      it('should specify a location of an error that happened during change detection (directive property)',\n        inject([TestBed, AsyncTestCompleter], (tb, async) => {\n\n        tb.overrideView(MyComp, new View({\n          template: '<child-cmp [prop]=\"a.b\"></child-cmp>',\n          directives: [ChildComp]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          expect(() => view.detectChanges()).toThrowError(new RegExp('a.b in MyComp'));\n          async.done();\n        })\n      }));\n    });\n\n    it('should support imperative views',\n        inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.overrideView(MyComp, new View({\n        template: '<simple-imp-cmp></simple-imp-cmp>',\n        directives: [SimpleImperativeViewComponent]\n      }));\n      tb.createView(MyComp).then((view) => {\n        expect(view.rootNodes).toHaveText('hello imp view');\n        async.done();\n      });\n    }));\n\n    // Disabled until a solution is found, refs:\n    // - https://github.com/angular/angular/issues/776\n    // - https://github.com/angular/angular/commit/81f3f32\n    xdescribe('Missing directive checks', () => {\n\n      if (assertionsEnabled()) {\n\n        function expectCompileError(tb, inlineTpl, errMessage, done) {\n          tb.overrideView(MyComp, new View({template: inlineTpl}));\n          PromiseWrapper.then(tb.createView(MyComp),\n            (value) => {\n              throw new BaseException(\"Test failure: should not have come here as an exception was expected\");\n            },\n            (err) => {\n              expect(err.message).toEqual(errMessage);\n              done();\n            }\n          );\n        }\n\n        it('should raise an error if no directive is registered for a template with template bindings', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          expectCompileError(\n            tb,\n            '<div><div template=\"if: foo\"></div></div>',\n            'Missing directive to handle \\'if\\' in <div template=\"if: foo\">',\n            () => async.done()\n          );\n        }));\n\n        it('should raise an error for missing template directive (1)', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          expectCompileError(\n            tb,\n            '<div><template foo></template></div>',\n            'Missing directive to handle: <template foo>',\n            () => async.done()\n          );\n        }));\n\n        it('should raise an error for missing template directive (2)', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          expectCompileError(\n            tb,\n            '<div><template *if=\"condition\"></template></div>',\n            'Missing directive to handle: <template *if=\"condition\">',\n            () => async.done()\n          );\n        }));\n\n        it('should raise an error for missing template directive (3)', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          expectCompileError(\n            tb,\n            '<div *if=\"condition\"></div>',\n            'Missing directive to handle \\'if\\' in MyComp: <div *if=\"condition\">',\n            () => async.done()\n          );\n        }));\n      }\n    });\n\n  });\n}\n\n@Component({\n  selector: 'simple-imp-cmp'\n})\n@View({\n  renderer: 'simple-imp-cmp-renderer'\n})\nclass SimpleImperativeViewComponent {\n  done;\n\n  constructor(self:ElementRef, renderer:DirectDomRenderer) {\n    renderer.setImperativeComponentRootNodes(self.parentView.render, self.boundElementIndex, [el('hello imp view')]);\n  }\n}\n\n\n@Directive({\n  selector: 'dynamic-vp'\n})\nclass DynamicViewport {\n  done;\n  constructor(vc:ViewContainerRef, inj:Injector, compiler:Compiler) {\n    var myService = new MyService();\n    myService.greeting = 'dynamic greet';\n    this.done = compiler.compileInHost(ChildCompUsingService).then( (hostPv) => {\n      vc.create(hostPv, 0, inj.createChildFromResolved(Injector.resolve([bind(MyService).toValue(myService)])))\n    });\n  }\n}\n\n@Directive({\n  selector: '[my-dir]',\n  properties: {'dirProp':'elprop'}\n})\nclass MyDir {\n  dirProp:string;\n  constructor() {\n    this.dirProp = '';\n  }\n}\n\n@Component({\n  selector: 'push-cmp',\n  properties: {\n    'prop': 'prop'\n  },\n  changeDetection:ON_PUSH\n})\n@View({template: '{{field}}'})\nclass PushCmp {\n  numberOfChecks:number;\n  prop;\n\n  constructor() {\n    this.numberOfChecks = 0;\n  }\n\n  get field(){\n    this.numberOfChecks++;\n    return \"fixed\";\n  }\n}\n\n @Component({\n  selector: 'push-cmp-with-ref',\n  properties: {\n    'prop': 'prop'\n  },\n  changeDetection:ON_PUSH\n})\n@View({template: '{{field}}'})\nclass PushCmpWithRef {\n  numberOfChecks:number;\n  ref:ChangeDetectorRef;\n  prop;\n\n  constructor(ref:ChangeDetectorRef) {\n    this.numberOfChecks = 0;\n    this.ref = ref;\n  }\n\n  get field(){\n    this.numberOfChecks++;\n    return \"fixed\";\n  }\n\n  propagate() {\n    this.ref.requestCheck();\n  }\n}\n\n@Component({\n  selector: 'my-comp'\n})\n@View({directives: [\n]})\nclass MyComp {\n  ctxProp:string;\n  ctxNumProp;\n  ctxBoolProp;\n  constructor() {\n    this.ctxProp = 'initial value';\n    this.ctxNumProp = 0;\n    this.ctxBoolProp = false;\n  }\n}\n\n\n@Component({\n  selector: 'component-with-pipes',\n  properties: {\n    \"prop\": \"prop | double\"\n  }\n})\n@View({\n  template: ''\n})\nclass ComponentWithPipes {\n  prop:string;\n}\n\n@Component({\n  selector: 'child-cmp',\n  injectables: [MyService],\n})\n@View({\n  directives: [MyDir],\n  template: '{{ctxProp}}'\n})\nclass ChildComp {\n  ctxProp:string;\n  dirProp:string;\n  constructor(service: MyService) {\n    this.ctxProp = service.greeting;\n    this.dirProp = null;\n  }\n}\n\n@Component({\n  selector: 'child-cmp-svc'\n})\n@View({\n  template: '{{ctxProp}}'\n})\nclass ChildCompUsingService {\n  ctxProp:string;\n  constructor(service: MyService) {\n    this.ctxProp = service.greeting;\n  }\n}\n\n@Directive({\n  selector: 'some-directive'\n})\nclass SomeDirective { }\n\n@Component({\n  selector: 'cmp-with-parent'\n})\n@View({\n  template: '<p>Component with an injected parent</p>',\n  directives: [SomeDirective]\n})\nclass CompWithParent {\n  myParent: SomeDirective;\n  constructor(@Parent() someComp: SomeDirective) {\n    this.myParent = someComp;\n  }\n}\n\n@Component({\n  selector: 'cmp-with-ancestor'\n})\n@View({\n  template: '<p>Component with an injected ancestor</p>',\n  directives: [SomeDirective]\n})\nclass CompWithAncestor {\n  myAncestor: SomeDirective;\n  constructor(@Ancestor() someComp: SomeDirective) {\n    this.myAncestor = someComp;\n  }\n}\n\n@Component({\n  selector: '[child-cmp2]',\n  injectables: [MyService]\n})\nclass ChildComp2 {\n  ctxProp:string;\n  dirProp:string;\n  constructor(service: MyService) {\n    this.ctxProp = service.greeting;\n    this.dirProp = null;\n  }\n}\n\n@Directive({\n  selector: '[some-viewport]'\n})\nclass SomeViewport {\n  constructor(container: ViewContainerRef, protoView:ProtoViewRef) {\n    container.create(protoView).setLocal('some-tmpl', 'hello');\n    container.create(protoView).setLocal('some-tmpl', 'again');\n  }\n}\n\nclass MyService {\n  greeting:string;\n  constructor() {\n    this.greeting = 'hello';\n  }\n}\n\nclass DoublePipe extends Pipe {\n  supports(obj) {\n    return true;\n  }\n\n  transform(value) {\n    return `${value}${value}`;\n  }\n}\n\nclass DoublePipeFactory {\n  supports(obj) {\n    return true;\n  }\n\n  create(cdRef) {\n    return new DoublePipe();\n  }\n}\n\n@Directive({\n  selector: '[emitter]',\n  events: ['event']\n})\nclass DirectiveEmitingEvent {\n  msg: string;\n  event:EventEmitter;\n\n  constructor() {\n    this.msg = '';\n    this.event = new EventEmitter();\n  }\n\n  fireEvent(msg: string) {\n    ObservableWrapper.callNext(this.event, msg);\n  }\n}\n\n@Directive({\n  selector: '[update-host-properties]',\n  hostProperties: {\n    'id' : 'id'\n  }\n})\nclass DirectiveUpdatingHostProperties {\n  id:string;\n\n  constructor() {\n    this.id = \"one\";\n  }\n}\n\n@Directive({\n  selector: '[listener]',\n  hostListeners: {'event': 'onEvent($event)'}\n})\nclass DirectiveListeningEvent {\n  msg: string;\n\n  constructor() {\n    this.msg = '';\n  }\n\n  onEvent(msg: string) {\n    this.msg = msg;\n  }\n}\n\n@Directive({\n  selector: '[listener]',\n  hostListeners: {\n    'domEvent': 'onEvent($event.type)',\n    'window:domEvent': 'onWindowEvent($event.type)',\n    'document:domEvent': 'onDocumentEvent($event.type)',\n    'body:domEvent': 'onBodyEvent($event.type)'\n  }\n})\nclass DirectiveListeningDomEvent {\n  eventType: string;\n  constructor() {\n    this.eventType = '';\n  }\n  onEvent(eventType: string) {\n    this.eventType = eventType;\n  }\n  onWindowEvent(eventType: string) {\n    this.eventType = \"window_\" + eventType;\n  }\n  onDocumentEvent(eventType: string) {\n    this.eventType = \"document_\" + eventType;\n  }\n  onBodyEvent(eventType: string) {\n    this.eventType = \"body_\" + eventType;\n  }\n}\n\nvar globalCounter = 0;\n@Directive({\n  selector: '[listenerother]',\n  hostListeners: {\n    'window:domEvent': 'onEvent($event.type)'\n  }\n})\nclass DirectiveListeningDomEventOther {\n  eventType: string;\n  counter: int;\n  constructor() {\n    this.eventType = '';\n  }\n  onEvent(eventType: string) {\n    globalCounter++;\n    this.eventType = \"other_\" + eventType;\n  }\n}\n\n@Directive({\n  selector: '[listenerprevent]',\n  hostListeners: {\n    'click': 'onEvent($event)'\n  }\n})\nclass DirectiveListeningDomEventPrevent {\n  onEvent(event) {\n    return false;\n  }\n}\n\n@Directive({\n  selector: '[listenernoprevent]',\n  hostListeners: {\n    'click': 'onEvent($event)'\n  }\n})\nclass DirectiveListeningDomEventNoPrevent {\n  onEvent(event) {\n    return true;\n  }\n}\n\n@Directive({\n  selector: '[id]',\n  properties: {'id': 'id'}\n})\nclass IdDir {\n  id: string;\n}\n\n@Directive({\n  selector: '[static]'\n})\nclass NeedsAttribute {\n  typeAttribute;\n  titleAttribute;\n  fooAttribute;\n  constructor(@Attribute('type') typeAttribute: String, @Attribute('title') titleAttribute: String, @Attribute('foo') fooAttribute: String) {\n    this.typeAttribute = typeAttribute;\n    this.titleAttribute = titleAttribute;\n    this.fooAttribute = fooAttribute;\n  }\n}\n\n@Directive({\n  selector: '[public-api]'\n})\nclass PublicApi {\n}\n\n@Directive({\n  selector: '[private-impl]'\n})\nclass PrivateImpl extends PublicApi {\n}\n\n@Directive({\n  selector: '[needs-public-api]'\n})\nclass NeedsPublicApi {\n  constructor(@Parent() api:PublicApi) {\n    expect(api instanceof PrivateImpl).toBe(true);\n  }\n}\n"]}