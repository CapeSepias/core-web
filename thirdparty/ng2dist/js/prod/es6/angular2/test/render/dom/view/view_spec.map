{"version":3,"sources":["view_spec.js"],"names":[],"mappings":"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","file":"angular2/test/render/dom/view/view_spec.es6","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  xdescribe,\n  describe,\n  el,\n  dispatchEvent,\n  expect,\n  iit,\n  inject,\n  beforeEachBindings,\n  it,\n  xit,\n  SpyObject, proxy\n} from 'angular2/test_lib';\nimport {IMPLEMENTS, isBlank} from 'angular2/src/facade/lang';\nimport {ListWrapper} from 'angular2/src/facade/collection';\n\nimport {RenderProtoView} from 'angular2/src/render/dom/view/proto_view';\nimport {ElementBinder} from 'angular2/src/render/dom/view/element_binder';\nimport {RenderView} from 'angular2/src/render/dom/view/view';\nimport {ViewContainer} from 'angular2/src/render/dom/view/view_container';\nimport {LightDom} from 'angular2/src/render/dom/shadow_dom/light_dom';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nexport function main() {\n\n  describe('RenderView', () => {\n    function createProtoView(binders = null) {\n      if (isBlank(binders)) {\n        binders = [];\n      }\n      var rootEl = el('<div></div>');\n      return new RenderProtoView({\n        element: rootEl,\n        elementBinders: binders\n      });\n    }\n\n    function createView(pv=null, boundElementCount=0) {\n      if (isBlank(pv)) {\n        pv = createProtoView();\n      }\n      var root = el('<div><div></div></div>');\n      var boundElements = [];\n      for (var i=0; i<boundElementCount; i++) {\n        ListWrapper.push(boundElements, el('<span></span'));\n      }\n      return new RenderView(pv, [DOM.childNodes(root)[0]],\n        [], boundElements, []);\n    }\n\n    describe('getDirectParentLightDom', () => {\n\n      it('should return the LightDom of the direct parent', () => {\n        var pv = createProtoView(\n          [new ElementBinder(), new ElementBinder({\n            parentIndex: 0,\n            distanceToParent: 1\n          })]\n        );\n        var view = createView(pv, 2);\n        view.lightDoms[0] = new SpyLightDom();\n        view.lightDoms[1] = new SpyLightDom();\n        expect(view.getDirectParentLightDom(1)).toBe(view.lightDoms[0]);\n      });\n\n      it('should return null if the direct parent is not bound', () => {\n        var pv = createProtoView(\n          [new ElementBinder(), new ElementBinder(), new ElementBinder({\n            parentIndex: 0,\n            distanceToParent: 2\n          })]\n        );\n        var view = createView(pv, 3);\n        view.lightDoms[0] = new SpyLightDom();\n        view.lightDoms[1] = new SpyLightDom();\n        view.lightDoms[2] = new SpyLightDom();\n        expect(view.getDirectParentLightDom(2)).toBe(null);\n      });\n\n    });\n\n    describe('getOrCreateViewContainer', () => {\n      it('should create a new container', () => {\n        var pv = createProtoView([new ElementBinder()]);\n        var view = createView(pv, 1);\n        expect(view.getOrCreateViewContainer(0) instanceof ViewContainer).toBe(true);\n      });\n\n      it('should return an existing container', () => {\n        var pv = createProtoView([new ElementBinder()]);\n        var view = createView(pv, 1);\n        var vc = view.getOrCreateViewContainer(0);\n        expect(view.getOrCreateViewContainer(0)).toBe(vc);\n      });\n    });\n\n  });\n}\n\n@proxy\n@IMPLEMENTS(LightDom)\nclass SpyLightDom extends SpyObject {\n  constructor(){super(LightDom);}\n  noSuchMethod(m){return super.noSuchMethod(m)}\n}\n\n"]}