{"version":3,"sources":["async_spec.js"],"names":[],"mappings":"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","file":"angular2/test/facade/async_spec.es6","sourcesContent":["import {describe, it, expect, beforeEach, ddescribe, iit, xit, el,\n  SpyObject, AsyncTestCompleter, inject, IS_DARTIUM} from 'angular2/test_lib';\n\nimport {ObservableWrapper, EventEmitter, PromiseWrapper} from 'angular2/src/facade/async';\n\nexport function main() {\n  describe('EventEmitter', () => {\n    var emitter:EventEmitter;\n    \n    beforeEach(() => {\n      emitter = new EventEmitter();\n    });\n\n    it(\"should call the next callback\",  inject([AsyncTestCompleter], (async) => {\n      ObservableWrapper.subscribe(emitter, (value) => {\n        expect(value).toEqual(99);\n        async.done();\n      });\n\n      ObservableWrapper.callNext(emitter, 99);\n    }));\n\n    it(\"should call the throw callback\", inject([AsyncTestCompleter], (async) => {\n      ObservableWrapper.subscribe(emitter, (_) => {}, (error) => {\n        expect(error).toEqual(\"Boom\");\n        async.done();\n      });\n      ObservableWrapper.callThrow(emitter, \"Boom\");\n    }));\n\n    it(\"should work when no throw callback is provided\", inject([AsyncTestCompleter], (async) => {\n      ObservableWrapper.subscribe(emitter, (_) => {}, (_) => {\n        async.done();\n      });\n      ObservableWrapper.callThrow(emitter, \"Boom\");\n    }));\n\n    it(\"should call the return callback\", inject([AsyncTestCompleter], (async) => {\n      ObservableWrapper.subscribe(emitter, (_) => {}, (_) => {}, () => {\n        async.done();\n      });\n\n      ObservableWrapper.callReturn(emitter);\n    }));\n\n    it(\"should subscribe to the wrapper asynchronously\", () => {\n      var called = false;\n      ObservableWrapper.subscribe(emitter, (value) => {\n        called = true;\n      });\n\n      ObservableWrapper.callNext(emitter, 99);\n      expect(called).toBe(false);\n    });\n\n    //TODO: vsavkin: add tests cases\n    //should call dispose on the subscription if generator returns {done:true}\n    //should call dispose on the subscription on throw\n    //should call dispose on the subscription on return\n });\n}"]}