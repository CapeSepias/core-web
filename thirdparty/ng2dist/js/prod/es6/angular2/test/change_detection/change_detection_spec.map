{"version":3,"sources":["change_detection_spec.js"],"names":[],"mappings":"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","file":"angular2/test/change_detection/change_detection_spec.es6","sourcesContent":["import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach, IS_DARTIUM} from 'angular2/test_lib';\n\nimport {isPresent, isBlank, isJsObject, BaseException, FunctionWrapper} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {Parser} from 'angular2/src/change_detection/parser/parser';\nimport {Lexer} from 'angular2/src/change_detection/parser/lexer';\nimport {Locals} from 'angular2/src/change_detection/parser/locals';\n\nimport {ChangeDispatcher, DynamicChangeDetector, ChangeDetectionError, BindingRecord, DirectiveRecord, DirectiveIndex,\n  PipeRegistry, Pipe, CHECK_ALWAYS, CHECK_ONCE, CHECKED, DETACHED, ON_PUSH, DEFAULT, WrappedValue} from 'angular2/change_detection';\n\nimport {JitProtoChangeDetector, DynamicProtoChangeDetector} from 'angular2/src/change_detection/proto_change_detector';\n\n\nexport function main() {\n  describe(\"change detection\", () => {\n    StringMapWrapper.forEach(\n      { \"dynamic\": (bindingRecords, variableBindings = null, directiveRecords = null, registry = null, strategy = null) =>\n                      new DynamicProtoChangeDetector(\n                        registry,\n                        isBlank(bindingRecords) ? [] : bindingRecords,\n                        isBlank(variableBindings) ? [] : variableBindings,\n                        isBlank(directiveRecords) ? [] : directiveRecords,\n                        strategy),\n\n        \"JIT\": (bindingRecords, variableBindings = null, directiveRecords = null, registry = null, strategy = null) =>\n                      new JitProtoChangeDetector(\n                        registry,\n                        isBlank(bindingRecords) ? [] : bindingRecords,\n                        isBlank(variableBindings) ? [] : variableBindings,\n                        isBlank(directiveRecords) ? [] : directiveRecords,\n                        strategy)\n\n      }, (createProtoChangeDetector, name) => {\n\n        if (name == \"JIT\" && IS_DARTIUM) return;\n\n        var parser = new Parser(new Lexer());\n\n        function ast(exp:string, location:string = 'location') {\n          return parser.parseBinding(exp, location);\n        }\n\n        function dirs(directives:List) {\n          return new FakeDirectives(directives, []);\n        }\n\n        function convertLocalsToVariableBindings(locals) {\n          var variableBindings = [];\n          var loc = locals;\n          while(isPresent(loc)) {\n            MapWrapper.forEach(loc.current, (v, k) => ListWrapper.push(variableBindings, k));\n            loc = loc.parent;\n          }\n          return variableBindings;\n        }\n\n        function createChangeDetector(propName:string, exp:string, context = null, locals = null, registry = null) {\n          var dispatcher = new TestDispatcher();\n\n          var variableBindings = convertLocalsToVariableBindings(locals);\n\n          var records = [BindingRecord.createForElement(ast(exp), 0, propName)];\n          var pcd = createProtoChangeDetector(records, variableBindings, [], registry);\n          var cd = pcd.instantiate(dispatcher);\n          cd.hydrate(context, locals, null);\n\n          return {\"changeDetector\" : cd, \"dispatcher\" : dispatcher};\n        }\n\n        function executeWatch(memo:string, exp:string, context = null, locals = null) {\n          var res = createChangeDetector(memo, exp, context, locals);\n          res[\"changeDetector\"].detectChanges();\n          return res[\"dispatcher\"].log;\n        }\n\n        describe(`${name} change detection`, () => {\n          var dispatcher;\n\n          beforeEach(() => {\n            dispatcher = new TestDispatcher();\n          });\n\n          it('should do simple watching', () => {\n            var person = new Person(\"misko\");\n\n            var c = createChangeDetector('name', 'name', person);\n            var cd = c[\"changeDetector\"];\n            var dispatcher = c[\"dispatcher\"];\n\n            cd.detectChanges();\n            expect(dispatcher.log).toEqual(['name=misko']);\n            dispatcher.clear();\n\n            cd.detectChanges();\n            expect(dispatcher.log).toEqual([]);\n            dispatcher.clear();\n\n            person.name = \"Misko\";\n            cd.detectChanges();\n            expect(dispatcher.log).toEqual(['name=Misko']);\n          });\n\n          it('should report all changes on the first run including uninitialized values', () => {\n            expect(executeWatch('value', 'value', new Uninitialized())).toEqual(['value=null']);\n          });\n\n          it('should report all changes on the first run including null values', () => {\n            var td = new TestData(null);\n            expect(executeWatch('a', 'a', td)).toEqual(['a=null']);\n          });\n\n          it(\"should support literals\", () => {\n            expect(executeWatch('const', '10')).toEqual(['const=10']);\n            expect(executeWatch('const', '\"str\"')).toEqual(['const=str']);\n            expect(executeWatch('const', '\"a\\n\\nb\"')).toEqual(['const=a\\n\\nb']);\n          });\n\n          it('simple chained property access', () => {\n            var address = new Address('Grenoble');\n            var person = new Person('Victor', address);\n\n            expect(executeWatch('address.city', 'address.city', person))\n              .toEqual(['address.city=Grenoble']);\n          });\n\n          it(\"should support method calls\", () => {\n            var person = new Person('Victor');\n            expect(executeWatch('m', 'sayHi(\"Jim\")', person)).toEqual(['m=Hi, Jim']);\n          });\n\n          it(\"should support function calls\", () => {\n            var td = new TestData(() => (a) => a);\n            expect(executeWatch('value', 'a()(99)', td)).toEqual(['value=99']);\n          });\n\n          it(\"should support chained method calls\", () => {\n            var person = new Person('Victor');\n            var td = new TestData(person);\n            expect(executeWatch('m', 'a.sayHi(\"Jim\")', td)).toEqual(['m=Hi, Jim']);\n          });\n\n          it(\"should support literal array\", () => {\n            var c = createChangeDetector('array', '[1,2]');\n            c[\"changeDetector\"].detectChanges();\n            expect(c[\"dispatcher\"].loggedValues).toEqual([[1, 2]]);\n\n            c = createChangeDetector('array', '[1,a]', new TestData(2));\n            c[\"changeDetector\"].detectChanges();\n            expect(c[\"dispatcher\"].loggedValues).toEqual([[1, 2]]);\n          });\n\n          it(\"should support literal maps\", () => {\n            var c = createChangeDetector('map', '{z:1}');\n            c[\"changeDetector\"].detectChanges();\n            expect(c[\"dispatcher\"].loggedValues[0]['z']).toEqual(1);\n\n            c = createChangeDetector('map', '{z:a}', new TestData(1));\n            c[\"changeDetector\"].detectChanges();\n            expect(c[\"dispatcher\"].loggedValues[0]['z']).toEqual(1);\n          });\n\n          it(\"should support binary operations\", () => {\n            expect(executeWatch('exp', '10 + 2')).toEqual(['exp=12']);\n            expect(executeWatch('exp', '10 - 2')).toEqual(['exp=8']);\n\n            expect(executeWatch('exp', '10 * 2')).toEqual(['exp=20']);\n            expect(executeWatch('exp', '10 / 2')).toEqual([`exp=${5.0}`]); //dart exp=5.0, js exp=5\n            expect(executeWatch('exp', '11 % 2')).toEqual(['exp=1']);\n\n            expect(executeWatch('exp', '1 == 1')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '1 != 1')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', '1 < 2')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '2 < 1')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', '2 > 1')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '2 < 1')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', '1 <= 2')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '2 <= 2')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '2 <= 1')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', '2 >= 1')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '2 >= 2')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '1 >= 2')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', 'true && true')).toEqual(['exp=true']);\n            expect(executeWatch('exp', 'true && false')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', 'true || false')).toEqual(['exp=true']);\n            expect(executeWatch('exp', 'false || false')).toEqual(['exp=false']);\n          });\n\n          it(\"should support negate\", () => {\n            expect(executeWatch('exp', '!true')).toEqual(['exp=false']);\n            expect(executeWatch('exp', '!!true')).toEqual(['exp=true']);\n          });\n\n          it(\"should support conditionals\", () => {\n            expect(executeWatch('m', '1 < 2 ? 1 : 2')).toEqual(['m=1']);\n            expect(executeWatch('m', '1 > 2 ? 1 : 2')).toEqual(['m=2']);\n          });\n\n          describe(\"keyed access\", () => {\n            it(\"should support accessing a list item\", () => {\n              expect(executeWatch('array[0]', '[\"foo\", \"bar\"][0]')).toEqual(['array[0]=foo']);\n            });\n\n            it(\"should support accessing a map item\", () => {\n              expect(executeWatch('map[foo]', '{\"foo\": \"bar\"}[\"foo\"]')).toEqual(['map[foo]=bar']);\n            });\n          });\n\n          it(\"should support interpolation\", () => {\n            var ast = parser.parseInterpolation(\"B{{a}}A\", \"location\");\n            var pcd = createProtoChangeDetector([BindingRecord.createForElement(ast, 0, \"memo\")]);\n\n            var cd = pcd.instantiate(dispatcher);\n            cd.hydrate(new TestData(\"value\"), null, null);\n\n            cd.detectChanges();\n\n            expect(dispatcher.log).toEqual([\"memo=BvalueA\"]);\n          });\n\n          describe(\"change notification\", () => {\n            describe(\"simple checks\", () => {\n              it(\"should pass a change record to the dispatcher\", () => {\n                var person = new Person('bob');\n                var c = createChangeDetector('name', 'name', person);\n                var cd = c[\"changeDetector\"];\n                var dispatcher = c[\"dispatcher\"];\n\n                cd.detectChanges();\n\n                expect(dispatcher.loggedValues).toEqual(['bob']);\n              });\n            });\n\n            describe(\"pipes\", () => {\n              it(\"should pass a change record to the dispatcher\", () => {\n                var registry = new FakePipeRegistry('pipe', () => new CountingPipe());\n\n                var person = new Person('bob');\n                var c = createChangeDetector('name', 'name | pipe', person, null, registry);\n                var cd = c[\"changeDetector\"];\n                var dispatcher = c[\"dispatcher\"];\n\n                cd.detectChanges();\n\n                expect(dispatcher.loggedValues).toEqual(['bob state:0']);\n              });\n            });\n\n            describe(\"updating directives\", () => {\n              var dirRecord1 = new DirectiveRecord(new DirectiveIndex(0, 0), true, true, DEFAULT);\n              var dirRecord2 = new DirectiveRecord(new DirectiveIndex(0, 1), true, true, DEFAULT);\n              var dirRecordNoCallbacks = new DirectiveRecord(new DirectiveIndex(0, 0), false, false, DEFAULT);\n\n              function updateA(exp:string, dirRecord) {\n                return BindingRecord.createForDirective(ast(exp), \"a\", (o,v) => o.a = v, dirRecord);\n              }\n\n              function updateB(exp:string, dirRecord) {\n                return BindingRecord.createForDirective(ast(exp), \"b\", (o,v) => o.b = v, dirRecord);\n              }\n\n              var directive1;\n              var directive2;\n\n              beforeEach(() => {\n                directive1 = new TestDirective();\n                directive2 = new TestDirective();\n              });\n\n              it(\"should happen directly, without invoking the dispatcher\", () => {\n                var pcd = createProtoChangeDetector([updateA(\"42\", dirRecord1)], [], [dirRecord1]);\n\n                var cd = pcd.instantiate(dispatcher);\n\n                cd.hydrate(null, null, dirs([directive1]));\n\n                cd.detectChanges();\n\n                expect(dispatcher.loggedValues).toEqual([]);\n                expect(directive1.a).toEqual(42);\n              });\n\n              describe(\"onChange\", () => {\n                it(\"should notify the directive when a group of records changes\", () => {\n                  var pcd = createProtoChangeDetector([\n                    updateA(\"1\", dirRecord1),\n                    updateB(\"2\", dirRecord1),\n                    updateA(\"3\", dirRecord2)\n                  ], [], [dirRecord1, dirRecord2]);\n\n                  var cd = pcd.instantiate(dispatcher);\n\n                  cd.hydrate(null, null, dirs([directive1, directive2]));\n\n                  cd.detectChanges();\n\n                  expect(directive1.changes).toEqual({'a': 1, 'b': 2});\n                  expect(directive2.changes).toEqual({'a': 3});\n                });\n\n                it(\"should not call onChange when callOnChange is false\", () => {\n                  var pcd = createProtoChangeDetector([\n                    updateA(\"1\", dirRecordNoCallbacks)\n                  ], [], [dirRecordNoCallbacks]);\n\n                  var cd = pcd.instantiate(dispatcher);\n\n                  cd.hydrate(null, null, dirs([directive1]));\n\n                  cd.detectChanges();\n\n                  expect(directive1.changes).toEqual(null);\n                });\n              });\n\n              describe(\"onAllChangesDone\", () => {\n                it(\"should be called after processing all the children\", () => {\n                  var pcd = createProtoChangeDetector([], [], [dirRecord1, dirRecord2]);\n\n                  var cd = pcd.instantiate(dispatcher);\n                  cd.hydrate(null, null, dirs([directive1, directive2]));\n\n                  cd.detectChanges();\n\n                  expect(directive1.onChangesDoneCalled).toBe(true);\n                  expect(directive2.onChangesDoneCalled).toBe(true);\n                });\n\n\n                it(\"should not be called when onAllChangesDone is false\", () => {\n                  var pcd = createProtoChangeDetector([\n                    updateA(\"1\", dirRecordNoCallbacks)\n                  ], [], [dirRecordNoCallbacks]);\n\n                  var cd = pcd.instantiate(dispatcher);\n\n                  cd.hydrate(null, null, dirs([directive1]));\n\n                  cd.detectChanges();\n\n                  expect(directive1.onChangesDoneCalled).toEqual(false);\n                });\n\n                it(\"should be called in reverse order so the child is always notified before the parent\", () => {\n                  var pcd = createProtoChangeDetector([], [], [dirRecord1, dirRecord2]);\n                  var cd = pcd.instantiate(dispatcher);\n\n                  var onChangesDoneCalls = [];\n                  var td1;\n                  td1 = new TestDirective(() => ListWrapper.push(onChangesDoneCalls, td1));\n                  var td2;\n                  td2 = new TestDirective(() => ListWrapper.push(onChangesDoneCalls, td2));\n                  cd.hydrate(null, null, dirs([td1, td2]));\n\n                  cd.detectChanges();\n\n                  expect(onChangesDoneCalls).toEqual([td2, td1]);\n                });\n\n                it(\"should be called before processing shadow dom children\", () => {\n                  var pcd = createProtoChangeDetector([], null, [dirRecord1]);\n                  var shadowDomChildPCD = createProtoChangeDetector([updateA(\"1\", dirRecord1)], null, [dirRecord1]);\n\n                  var parent = pcd.instantiate(dispatcher);\n\n                  var child = shadowDomChildPCD.instantiate(dispatcher);\n                  parent.addShadowDomChild(child);\n\n                  var directiveInShadowDom = new TestDirective();\n                  var parentDirective = new TestDirective(() => {\n                    expect(directiveInShadowDom.a).toBe(null);\n                  });\n\n                  parent.hydrate(null, null, dirs([parentDirective]));\n                  child.hydrate(null, null, dirs([directiveInShadowDom]));\n\n                  parent.detectChanges();\n                });\n              });\n            });\n          });\n\n          describe(\"reading directives\", () => {\n            var index = new DirectiveIndex(0, 0);\n            var dirRecord = new DirectiveRecord(index, false, false, DEFAULT);\n\n            it(\"should read directive properties\", () => {\n              var directive = new TestDirective();\n              directive.a = \"aaa\";\n\n              var pcd = createProtoChangeDetector([BindingRecord.createForHostProperty(index, ast(\"a\"), \"prop\")], null, [dirRecord]);\n              var cd = pcd.instantiate(dispatcher);\n              cd.hydrate(null, null, dirs([directive]));\n\n              cd.detectChanges();\n\n              expect(dispatcher.loggedValues).toEqual(['aaa']);\n            });\n          });\n\n          describe(\"enforce no new changes\", () => {\n            it(\"should throw when a record gets changed after it has been checked\", () => {\n              var pcd = createProtoChangeDetector([\n                BindingRecord.createForElement(ast(\"a\"), 0, \"a\")\n              ]);\n\n              var dispatcher = new TestDispatcher();\n              var cd = pcd.instantiate(dispatcher);\n              cd.hydrate(new TestData('value'), null, null);\n\n              expect(() => {\n                cd.checkNoChanges();\n              }).toThrowError(new RegExp(\"Expression 'a in location' has changed after it was checked\"));\n            });\n          });\n\n          //TODO vsavkin: implement it\n          describe(\"error handling\", () => {\n            xit(\"should wrap exceptions into ChangeDetectionError\", () => {\n              var pcd = createProtoChangeDetector();\n              var cd = pcd.instantiate(new TestDispatcher(), [\n                BindingRecord.createForElement(ast(\"invalidProp\"), 0, \"a\")\n              ], null, []);\n              cd.hydrate(null, null);\n\n              try {\n                cd.detectChanges();\n\n                throw new BaseException(\"fail\");\n              } catch (e) {\n                expect(e).toBeAnInstanceOf(ChangeDetectionError);\n                expect(e.location).toEqual(\"invalidProp in someComponent\");\n              }\n            });\n          });\n\n          describe(\"Locals\", () => {\n            it('should read a value from locals', () => {\n              var locals = new Locals(null,\n                MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n\n              expect(executeWatch('key', 'key', null, locals))\n                .toEqual(['key=value']);\n            });\n\n            it('should invoke a function from local', () => {\n              var locals = new Locals(null,\n                MapWrapper.createFromPairs([[\"key\", () => \"value\"]]));\n\n              expect(executeWatch('key', 'key()', null, locals))\n                .toEqual(['key=value']);\n            });\n\n            it('should handle nested locals', () => {\n              var nested = new Locals(null,\n                MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n              var locals = new Locals(nested, MapWrapper.create());\n\n              expect(executeWatch('key', 'key', null, locals))\n                .toEqual(['key=value']);\n            });\n\n            it(\"should fall back to a regular field read when the locals map\" +\n              \"does not have the requested field\", () => {\n              var locals = new Locals(null,\n                MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n\n              expect(executeWatch('name', 'name', new Person(\"Jim\"), locals))\n                .toEqual(['name=Jim']);\n            });\n\n            it('should correctly handle nested properties', () => {\n              var address = new Address('Grenoble');\n              var person = new Person('Victor', address);\n              var locals = new Locals(null,\n                  MapWrapper.createFromPairs([['city', 'MTV']]));\n              expect(executeWatch('address.city', 'address.city', person, locals))\n                .toEqual(['address.city=Grenoble']);\n              expect(executeWatch('city', 'city', person, locals))\n                .toEqual(['city=MTV']);\n            });\n\n          });\n\n          describe(\"handle children\", () => {\n            var parent, child;\n\n            beforeEach(() => {\n              parent = createProtoChangeDetector([]).instantiate(null);\n              child = createProtoChangeDetector([]).instantiate(null);\n            });\n\n            it(\"should add light dom children\", () => {\n              parent.addChild(child);\n\n              expect(parent.lightDomChildren.length).toEqual(1);\n              expect(parent.lightDomChildren[0]).toBe(child);\n            });\n\n            it(\"should add shadow dom children\", () => {\n              parent.addShadowDomChild(child);\n\n              expect(parent.shadowDomChildren.length).toEqual(1);\n              expect(parent.shadowDomChildren[0]).toBe(child);\n            });\n\n            it(\"should remove light dom children\", () => {\n              parent.addChild(child);\n              parent.removeChild(child);\n\n              expect(parent.lightDomChildren).toEqual([]);\n            });\n\n            it(\"should remove shadow dom children\", () => {\n              parent.addShadowDomChild(child);\n              parent.removeShadowDomChild(child);\n\n              expect(parent.shadowDomChildren.length).toEqual(0);\n            });\n          });\n        });\n\n        describe(\"mode\", () => {\n          it(\"should set the mode to CHECK_ALWAYS when the default change detection is used\", () => {\n            var proto = createProtoChangeDetector([], [], [], null, DEFAULT);\n            var cd = proto.instantiate(null);\n\n            expect(cd.mode).toEqual(null);\n\n            cd.hydrate(null, null, null);\n\n            expect(cd.mode).toEqual(CHECK_ALWAYS);\n          });\n\n          it(\"should set the mode to CHECK_ONCE when the push change detection is used\", () => {\n            var proto = createProtoChangeDetector([], [], [], null, ON_PUSH);\n            var cd = proto.instantiate(null);\n            cd.hydrate(null, null, null);\n\n            expect(cd.mode).toEqual(CHECK_ONCE);\n          });\n\n          it(\"should not check a detached change detector\", () => {\n            var c = createChangeDetector('name', 'a', new TestData(\"value\"));\n            var cd = c[\"changeDetector\"];\n            var dispatcher = c[\"dispatcher\"];\n\n            cd.mode = DETACHED;\n            cd.detectChanges();\n\n            expect(dispatcher.log).toEqual([]);\n          });\n\n          it(\"should not check a checked change detector\", () => {\n            var c = createChangeDetector('name', 'a', new TestData(\"value\"));\n            var cd = c[\"changeDetector\"];\n            var dispatcher = c[\"dispatcher\"];\n\n            cd.mode = CHECKED;\n            cd.detectChanges();\n\n            expect(dispatcher.log).toEqual([]);\n          });\n\n          it(\"should change CHECK_ONCE to CHECKED\", () => {\n            var cd = createProtoChangeDetector([]).instantiate(null);\n            cd.mode = CHECK_ONCE;\n\n            cd.detectChanges();\n\n            expect(cd.mode).toEqual(CHECKED);\n          });\n\n          it(\"should not change the CHECK_ALWAYS\", () => {\n            var cd = createProtoChangeDetector([]).instantiate(null);\n            cd.mode = CHECK_ALWAYS;\n\n            cd.detectChanges();\n\n            expect(cd.mode).toEqual(CHECK_ALWAYS);\n          });\n\n          describe(\"marking ON_PUSH detectors as CHECK_ONCE after an update\", () => {\n            var checkedDetector;\n            var dirRecordWithOnPush;\n            var updateDirWithOnPushRecord;\n            var directives;\n\n            beforeEach(() => {\n              var proto = createProtoChangeDetector([], [], [], null, ON_PUSH);\n              checkedDetector = proto.instantiate(null);\n              checkedDetector.hydrate(null, null, null);\n              checkedDetector.mode = CHECKED;\n\n              // this directive is a component with ON_PUSH change detection\n              dirRecordWithOnPush = new DirectiveRecord(new DirectiveIndex(0, 0), false, false, ON_PUSH);\n\n              // a record updating a component\n              updateDirWithOnPushRecord =\n                BindingRecord.createForDirective(ast(\"42\"), \"a\", (o,v) => o.a = v, dirRecordWithOnPush);\n\n              var targetDirective = new TestData(null);\n              directives = new FakeDirectives([targetDirective], [checkedDetector]);\n            });\n\n            it(\"should set the mode to CHECK_ONCE when a binding is updated\", () => {\n              var proto = createProtoChangeDetector([updateDirWithOnPushRecord], [], [dirRecordWithOnPush]);\n\n              var cd = proto.instantiate(null);\n              cd.hydrate(null, null, directives);\n\n              expect(checkedDetector.mode).toEqual(CHECKED);\n\n              // evaluate the record, update the targetDirective, and mark its detector as CHECK_ONCE\n              cd.detectChanges();\n\n              expect(checkedDetector.mode).toEqual(CHECK_ONCE);\n            });\n          });\n        });\n\n        describe(\"markPathToRootAsCheckOnce\", () => {\n          function changeDetector(mode, parent) {\n            var cd = createProtoChangeDetector([]).instantiate(null);\n            cd.mode = mode;\n            if (isPresent(parent)) parent.addChild(cd);\n            return cd;\n          }\n\n          it(\"should mark all checked detectors as CHECK_ONCE \" +\n            \"until reaching a detached one\", () => {\n\n            var root = changeDetector(CHECK_ALWAYS, null);\n            var disabled = changeDetector(DETACHED, root);\n            var parent = changeDetector(CHECKED, disabled);\n            var checkAlwaysChild = changeDetector(CHECK_ALWAYS, parent);\n            var checkOnceChild = changeDetector(CHECK_ONCE, checkAlwaysChild);\n            var checkedChild = changeDetector(CHECKED, checkOnceChild);\n\n            checkedChild.markPathToRootAsCheckOnce();\n\n            expect(root.mode).toEqual(CHECK_ALWAYS);\n            expect(disabled.mode).toEqual(DETACHED);\n            expect(parent.mode).toEqual(CHECK_ONCE);\n            expect(checkAlwaysChild.mode).toEqual(CHECK_ALWAYS);\n            expect(checkOnceChild.mode).toEqual(CHECK_ONCE);\n            expect(checkedChild.mode).toEqual(CHECK_ONCE);\n          });\n        });\n\n        describe(\"hydration\", () => {\n          it(\"should be able to rehydrate a change detector\", () => {\n            var c  = createChangeDetector(\"memo\", \"name\");\n            var cd = c[\"changeDetector\"];\n\n            cd.hydrate(\"some context\", null, null);\n            expect(cd.hydrated()).toBe(true);\n\n            cd.dehydrate();\n            expect(cd.hydrated()).toBe(false);\n\n            cd.hydrate(\"other context\", null, null);\n            expect(cd.hydrated()).toBe(true);\n          });\n\n          it(\"should destroy all active pipes during dehyration\", () => {\n            var pipe = new OncePipe();\n            var registry = new FakePipeRegistry('pipe', () => pipe);\n            var c  = createChangeDetector(\"memo\", \"name | pipe\", new Person('bob'), null, registry);\n            var cd = c[\"changeDetector\"];\n\n            cd.detectChanges();\n\n            cd.dehydrate();\n\n            expect(pipe.destroyCalled).toBe(true);\n          });\n        });\n\n        describe(\"pipes\", () => {\n          it(\"should support pipes\", () => {\n            var registry = new FakePipeRegistry('pipe', () => new CountingPipe());\n            var ctx = new Person(\"Megatron\");\n\n            var c  = createChangeDetector(\"memo\", \"name | pipe\", ctx, null, registry);\n            var cd = c[\"changeDetector\"];\n            var dispatcher = c[\"dispatcher\"];\n\n            cd.detectChanges();\n\n            expect(dispatcher.log).toEqual(['memo=Megatron state:0']);\n\n            dispatcher.clear();\n            cd.detectChanges();\n\n            expect(dispatcher.log).toEqual(['memo=Megatron state:1']);\n          });\n\n          it(\"should lookup pipes in the registry when the context is not supported\", () => {\n            var registry = new FakePipeRegistry('pipe', () => new OncePipe());\n            var ctx = new Person(\"Megatron\");\n\n            var c  = createChangeDetector(\"memo\", \"name | pipe\", ctx, null, registry);\n            var cd = c[\"changeDetector\"];\n\n            cd.detectChanges();\n\n            expect(registry.numberOfLookups).toEqual(1);\n\n            ctx.name = \"Optimus Prime\";\n            cd.detectChanges();\n\n            expect(registry.numberOfLookups).toEqual(2);\n          });\n\n          it(\"should invoke onDestroy on a pipe before switching to another one\", () => {\n            var pipe = new OncePipe();\n            var registry = new FakePipeRegistry('pipe', () => pipe);\n            var ctx = new Person(\"Megatron\");\n\n            var c  = createChangeDetector(\"memo\", \"name | pipe\", ctx, null, registry);\n            var cd = c[\"changeDetector\"];\n\n            cd.detectChanges();\n            ctx.name = \"Optimus Prime\";\n            cd.detectChanges();\n\n            expect(pipe.destroyCalled).toEqual(true);\n          });\n\n          it(\"should inject the ChangeDetectorRef \" +\n            \"of the encompassing component into a pipe\", () => {\n\n            var registry = new FakePipeRegistry('pipe', () => new IdentityPipe());\n            var c = createChangeDetector(\"memo\", \"name | pipe\", new Person('bob'), null, registry);\n            var cd = c[\"changeDetector\"];\n\n            cd.detectChanges();\n\n            expect(registry.cdRef).toBe(cd.ref);\n          });\n        });\n\n        it(\"should do nothing when no change\", () => {\n          var registry = new FakePipeRegistry('pipe', () => new IdentityPipe())\n          var ctx = new Person(\"Megatron\");\n\n          var c  = createChangeDetector(\"memo\", \"name | pipe\", ctx, null, registry);\n          var cd = c[\"changeDetector\"];\n          var dispatcher = c[\"dispatcher\"];\n\n          cd.detectChanges();\n\n          expect(dispatcher.log).toEqual(['memo=Megatron']);\n\n          dispatcher.clear();\n          cd.detectChanges();\n\n          expect(dispatcher.log).toEqual([]);\n        });\n\n        it(\"should unwrap the wrapped value\", () => {\n          var registry = new FakePipeRegistry('pipe', () => new WrappedPipe())\n          var ctx = new Person(\"Megatron\");\n\n          var c  = createChangeDetector(\"memo\", \"name | pipe\", ctx, null, registry);\n          var cd = c[\"changeDetector\"];\n          var dispatcher = c[\"dispatcher\"];\n\n          cd.detectChanges();\n\n          expect(dispatcher.log).toEqual(['memo=Megatron']);\n        });\n      });\n  });\n}\n\nclass CountingPipe extends Pipe {\n  state:number;\n\n  constructor() {\n    super();\n    this.state = 0;\n  }\n\n  supports(newValue) {\n    return true;\n  }\n\n  transform(value) {\n    return `${value} state:${this.state ++}`;\n  }\n}\n\nclass OncePipe extends Pipe {\n  called:boolean;\n  destroyCalled:boolean;\n\n  constructor() {\n    super();\n    this.called = false;\n    this.destroyCalled = false;\n  }\n\n  supports(newValue) {\n    return !this.called;\n  }\n\n  onDestroy() {\n    this.destroyCalled = true;\n  }\n\n  transform(value) {\n    this.called = true;\n    return value;\n  }\n}\n\nclass IdentityPipe extends Pipe {\n  transform(value) {\n    return value;\n  }\n}\n\nclass WrappedPipe extends Pipe {\n  transform(value) {\n    return WrappedValue.wrap(value);\n  }\n}\n\nclass FakePipeRegistry extends PipeRegistry {\n  numberOfLookups:number;\n  pipeType:string;\n  factory:Function;\n  cdRef:any;\n\n  constructor(pipeType, factory) {\n    super({});\n    this.pipeType = pipeType;\n    this.factory = factory;\n    this.numberOfLookups = 0;\n  }\n\n  get(type:string, obj, cdRef) {\n    if (type != this.pipeType) return null;\n    this.numberOfLookups ++;\n    this.cdRef = cdRef;\n    return this.factory();\n  }\n}\n\nclass TestDirective {\n  a;\n  b;\n  changes;\n  onChangesDoneCalled;\n  onChangesDoneSpy;\n\n  constructor(onChangesDoneSpy = null) {\n    this.onChangesDoneCalled = false;\n    this.onChangesDoneSpy = onChangesDoneSpy;\n    this.a = null;\n    this.b = null;\n    this.changes = null;\n  }\n\n  onChange(changes) {\n    var r = {};\n    StringMapWrapper.forEach(changes, (c, key) => r[key] = c.currentValue);\n    this.changes = r;\n  }\n\n  onAllChangesDone() {\n    this.onChangesDoneCalled = true;\n    if(isPresent(this.onChangesDoneSpy)) {\n      this.onChangesDoneSpy();\n    }\n  }\n}\n\nclass Person {\n  name:string;\n  age:number;\n  address:Address;\n  constructor(name:string, address:Address = null) {\n    this.name = name;\n    this.address = address;\n  }\n\n  sayHi(m) {\n    return `Hi, ${m}`;\n  }\n\n  toString():string {\n    var address = this.address == null ? '' : ' address=' + this.address.toString();\n\n    return 'name=' + this.name + address;\n  }\n}\n\nclass Address {\n  city:string;\n  constructor(city:string) {\n    this.city = city;\n  }\n\n  toString():string {\n    return this.city;\n  }\n}\n\nclass Uninitialized {\n  value:any;\n}\n\nclass TestData {\n  a;\n\n  constructor(a) {\n    this.a = a;\n  }\n}\n\nclass FakeDirectives {\n  directives:List;\n  detectors:List;\n\n  constructor(directives:List, detectors:List) {\n    this.directives = directives;\n    this.detectors = detectors;\n  }\n\n  getDirectiveFor(di:DirectiveIndex) {\n    return this.directives[di.directiveIndex];\n  }\n\n  getDetectorFor(di:DirectiveIndex) {\n    return this.detectors[di.directiveIndex];\n  }\n}\n\nclass TestDispatcher extends ChangeDispatcher {\n  log:List;\n  loggedValues:List;\n\n  constructor() {\n    super();\n    this.clear();\n  }\n\n  clear() {\n    this.log = ListWrapper.create();\n    this.loggedValues = ListWrapper.create();\n  }\n\n  notifyOnBinding(binding, value) {\n    ListWrapper.push(this.log, `${binding.propertyName}=${this._asString(value)}`);\n    ListWrapper.push(this.loggedValues, value);\n  }\n\n  _asString(value) {\n    return (isBlank(value) ? 'null' : value.toString());\n  }\n}\n"]}