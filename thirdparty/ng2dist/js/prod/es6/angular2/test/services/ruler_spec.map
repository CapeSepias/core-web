{"version":3,"sources":["ruler_spec.js"],"names":[],"mappings":"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","file":"angular2/test/services/ruler_spec.es6","sourcesContent":["import {\n  AsyncTestCompleter, inject, ddescribe, describe, it, iit, xit, expect, SpyObject,\n  proxy\n} from 'angular2/test_lib';\n\nimport {DOM, DomAdapter} from 'angular2/src/dom/dom_adapter';\nimport {ElementRef} from 'angular2/src/core/compiler/element_ref';\n\nimport {Ruler, Rectangle} from 'angular2/src/services/ruler';\nimport {createRectangle} from './rectangle_mock';\nimport {IMPLEMENTS} from 'angular2/src/facade/lang';\n\nfunction assertDimensions(rect: Rectangle, left, right, top, bottom, width, height) {\n  expect(rect.left).toEqual(left);\n  expect(rect.right).toEqual(right);\n  expect(rect.top).toEqual(top);\n  expect(rect.bottom).toEqual(bottom);\n  expect(rect.width).toEqual(width);\n  expect(rect.height).toEqual(height);\n}\n\nexport function main() {\n\n  describe('ruler service', () => {\n\n    it('should allow measuring ElementRefs',\n      inject([AsyncTestCompleter], (async) => {\n        var ruler = new Ruler(SpyObject.stub(new SpyDomAdapter(), {\n          'getBoundingClientRect': createRectangle(10, 20, 200, 100)\n        }));\n\n        var elRef = new SpyElementRef();\n        ruler.measure(elRef).then((rect) => {\n          assertDimensions(rect, 10, 210, 20, 120, 200, 100);\n          async.done();\n        });\n      }));\n\n\n    it('should return 0 for all rectangle values while measuring elements in a document fragment',\n      inject([AsyncTestCompleter], (async) => {\n        var ruler = new Ruler(DOM);\n        var elRef = new SpyElementRef();\n        elRef.domElement = DOM.createElement('div');\n        ruler.measure(elRef).then((rect) => {\n          //here we are using an element created in a doc fragment so all the measures will come back as 0\n          assertDimensions(rect, 0, 0, 0, 0, 0, 0);\n          async.done();\n        });\n    }));\n\n  });\n}\n\n@proxy\n@IMPLEMENTS(ElementRef)\nclass SpyElementRef extends SpyObject {\n  domElement;\n  constructor(){super(ElementRef);}\n  noSuchMethod(m){return super.noSuchMethod(m)}\n}\n\n@proxy\n@IMPLEMENTS(DomAdapter)\nclass SpyDomAdapter extends SpyObject {\n  constructor(){super(DomAdapter);}\n  noSuchMethod(m){return super.noSuchMethod(m)}\n}\n"]}