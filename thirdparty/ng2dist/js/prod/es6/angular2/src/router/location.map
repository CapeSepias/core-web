{"version":3,"sources":["location.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,MAAK,CAAC,KAAO,2BAAyB,CAAC;AAC/C,KAAO,EAAC,YAAW;AAAG,kBAAgB,CAAC,KAAO,4BAA0B,CAAC;AAEzE,KAAO,MAAM,SAAO;AAIlB,YAAU,CAAE,AAAD,CAAG;AACZ,OAAG,SAAS,EAAI,IAAI,aAAW,AAAC,EAAC,CAAC;AAClC,OAAG,UAAU,EAAI,CAAA,MAAK,SAAS,CAAC;AAChC,OAAG,SAAS,EAAI,CAAA,MAAK,QAAQ,CAAC;AAC9B,SAAK,iBAAiB,AAAC,CAAC,UAAS,CAAG,EAAC,CAAA,IAAM,CAAA,IAAG,YAAY,AAAC,CAAC,CAAA,CAAC,CAAG,MAAI,CAAC,CAAC;EACxE;AAAA,AAEA,YAAU,CAAE,CAAA,CAAG;AACb,oBAAgB,SAAS,AAAC,CAAC,IAAG,SAAS,CAAG,EACxC,KAAI,CAAG,CAAA,IAAG,UAAU,SAAS,CAC/B,CAAC,CAAC;EACJ;AAAA,AAEA,KAAG,CAAE,AAAD,CAAG;AACL,SAAO,CAAA,IAAG,UAAU,SAAS,CAAC;EAChC;AAAA,AAEA,GAAC,CAAE,GAAE,AAAO,CAAG;AACb,OAAG,SAAS,UAAU,AAAC,CAAC,IAAG,CAAG,KAAG,CAAG,IAAE,CAAC,CAAC;EAC1C;AAAA,AAEA,QAAM,CAAE,AAAD,CAAG;AACR,OAAG,SAAS,QAAQ,AAAC,EAAC,CAAC;EACzB;AAAA,AAEA,KAAG,CAAE,AAAD,CAAG;AACL,OAAG,SAAS,KAAK,AAAC,EAAC,CAAA;EACrB;AAAA,AAEA,UAAQ,CAAE,MAAK,CAAG,CAAA,OAAM,EAAI,KAAG,CAAG,CAAA,QAAO,EAAI,KAAG,CAAG;AACjD,oBAAgB,UAAU,AAAC,CAAC,IAAG,SAAS,CAAG,OAAK,CAAG,QAAM,CAAG,SAAO,CAAC,CAAC;EACvE;AAAA,AACF;AAAA,AAvCA,KAAK,eAAe,AAAC,qCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AAuCrD","file":"angular2/src/router/location.es6","sourcesContent":["import {global} from 'angular2/src/facade/lang';\nimport {EventEmitter, ObservableWrapper} from 'angular2/src/facade/async';\n\nexport class Location {\n  _location;\n  _subject:EventEmitter;\n  _history;\n  constructor() {\n    this._subject = new EventEmitter();\n    this._location = global.location;\n    this._history = global.history;\n    global.addEventListener('popstate', (_) => this._onPopState(_), false);\n  }\n\n  _onPopState(_) {\n    ObservableWrapper.callNext(this._subject, {\n      'url': this._location.pathname\n    });\n  }\n\n  path() {\n    return this._location.pathname;\n  }\n\n  go(url:string) {\n    this._history.pushState(null, null, url);\n  }\n\n  forward() {\n    this._history.forward();\n  }\n\n  back() {\n    this._history.back()\n  }\n\n  subscribe(onNext, onThrow = null, onReturn = null) {\n    ObservableWrapper.subscribe(this._subject, onNext, onThrow, onReturn);\n  }\n}\n"]}