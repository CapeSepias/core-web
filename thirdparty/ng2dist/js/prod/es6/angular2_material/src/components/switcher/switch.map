{"version":3,"sources":["switch.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,SAAQ,CAAC,KAAO,iDAA+C,CAAC;AACxE,KAAO,EAAC,IAAG,CAAC,KAAO,0CAAwC,CAAC;AAC5D,KAAO,EAAC,SAAQ,CAAC,KAAO,wCAAsC,CAAC;AAC/D,KAAO,EAAC,SAAQ,CAAC,KAAO,2BAAyB,CAAC;AAClD,KAAO,EAAC,SAAQ,CAAC,KAAO,uCAAqC,CAAA;AAC7D,KAAO,EAAC,aAAY,CAAC,KAAO,8BAA4B,CAAC;AACzD,KAAO,EAAC,aAAY,CAAC,KAAO,2BAAyB,CAAC;AAuBtD,KAAO,MAAM,SAAO;AAUlB,YAAU,CAAE,AAAuB,QAAO,AAAQ,CAAG;AACnD,OAAG,KAAK,EAAI,WAAS,CAAC;AACtB,OAAG,QAAQ,EAAI,MAAI,CAAC;AACpB,OAAG,SAAS,EAAI,CAAA,SAAQ,AAAC,CAAC,QAAO,CAAC,CAAA,CAAI,CAAA,aAAY,SAAS,AAAC,CAAC,QAAO,CAAG,GAAC,CAAC,CAAA,CAAI,EAAA,CAAC;EAChF;AAAA,AAEA,IAAI,SAAO,EAAI;AACb,SAAO,CAAA,IAAG,UAAU,CAAC;EACvB;AAAA,AAEA,IAAI,SAAO,CAAE,KAAI,CAAG;AAClB,OAAG,UAAU,EAAI,CAAA,SAAQ,AAAC,CAAC,KAAI,CAAC,CAAA,EAAK,CAAA,KAAI,IAAM,MAAI,CAAC;EACtD;AAAA,AAEA,UAAQ,CAAE,KAAI,AAAe,CAAG;AAC9B,OAAI,KAAI,QAAQ,IAAM,UAAQ,CAAG;AAC/B,UAAI,eAAe,AAAC,EAAC,CAAC;AACtB,SAAG,OAAO,AAAC,CAAC,KAAI,CAAC,CAAC;IACpB;AAAA,EACF;AAAA,AAEA,OAAK,CAAE,KAAI,CAAG;AACZ,OAAI,IAAG,SAAS,CAAG;AACjB,UAAI,gBAAgB,AAAC,EAAC,CAAC;AACvB,aAAM;IACR;AAAA,AAEA,OAAG,QAAQ,EAAI,EAAC,IAAG,QAAQ,CAAC;EAC9B;AAAA,AACF;AAAA,AApEA,KAAK,eAAe,AAAC,yBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cASzB,UAAQ,AAAC,CAAC;AACT,aAAO,CAAG,YAAU;AACpB,eAAS,CAAG;AACV,gBAAQ,CAAG,UAAQ;AACnB,iBAAS,CAAG,WAAS;AAAA,MACvB;AACA,kBAAY,CAAG,EACb,SAAQ,CAAG,oBAAkB,CAC/B;AACA,mBAAa,CAAG;AACd,gBAAQ,CAAG,oBAAkB;AAC7B,kBAAU,CAAG,qBAAmB;AAChC,aAAK,CAAG,YAAU;AAAA,MACpB;AAAA,IACF,CAAC,KACA,KAAG,AAAC,CAAC;AACJ,gBAAU,CAAG,wDAAsD;AACnE,eAAS,CAAG,GAAC;AAAA,IACf,CAAC,EA3BgD;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,wBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,YAuCN,UAAQ,AAAC,CAAC,UAAS,CAAC,GAtCc;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,4CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAoDP,aAAY,GApDkB;EAAC,CAAC,CAAC,CAAC;AAqErD","file":"angular2_material/src/components/switcher/switch.es6","sourcesContent":["import {Component} from 'angular2/src/core/annotations_impl/annotations';\nimport {View} from 'angular2/src/core/annotations_impl/view';\nimport {Attribute} from 'angular2/src/core/annotations_impl/di';\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {KEY_SPACE} from 'angular2_material/src/core/constants'\nimport {KeyboardEvent} from 'angular2/src/facade/browser';\nimport {NumberWrapper} from 'angular2/src/facade/lang';\n\n// TODO(jelbourn): without gesture support, this is identical to MdCheckbox.\n\n@Component({\n  selector: 'md-switch',\n  properties: {\n    'checked': 'checked',\n    'disabled': 'disabled'\n  },\n  hostListeners: {\n    'keydown': 'onKeydown($event)'\n  },\n  hostProperties: {\n    'checked': 'attr.aria-checked',\n    'disabled_': 'attr.aria-disabled',\n    'role': 'attr.role'\n  }\n})\n@View({\n  templateUrl: 'angular2_material/src/components/switcher/switch.html',\n  directives: []\n})\nexport class MdSwitch {\n  /** Whether this switch is checked. */\n  checked: boolean;\n\n  /** Whether this switch is disabled. */\n  disabled_: boolean;\n\n  tabindex: number;\n  role: string;\n\n  constructor(@Attribute('tabindex') tabindex: string) {\n    this.role = 'checkbox';\n    this.checked = false;\n    this.tabindex = isPresent(tabindex) ? NumberWrapper.parseInt(tabindex, 10) : 0;\n  }\n\n  get disabled() {\n    return this.disabled_;\n  }\n\n  set disabled(value) {\n    this.disabled_ = isPresent(value) && value !== false;\n  }\n\n  onKeydown(event: KeyboardEvent) {\n    if (event.keyCode === KEY_SPACE) {\n      event.preventDefault();\n      this.toggle(event);\n    }\n  }\n\n  toggle(event) {\n    if (this.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    this.checked = !this.checked;\n  }\n}\n\n"]}