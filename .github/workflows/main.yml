name: Run Tests
# Run in all PRs and commits to `master` and releases
on:
  pull_request:
  push:
    branches:
      - master
      - release-*
      - issue-*
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOT_CICD_CLOUD_PROVIDER: github
      DOT_CICD_TARGET: core-web
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_USER: dotcmsbuild
      GITHUB_USER_TOKEN: ${{ secrets.USER_TOKEN }}
      PULL_REQUEST: ${{ github.event.number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
 
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}      

      - name: Setting Node.js 10.x
        uses: actions/setup-node@v2-beta
        with:
          node-version: '10.15.3'

      - name: Set Common Vars
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BRANCH="${{ github.head_ref }}"
            COMMIT_MESSG=$(git log -1 --pretty=format:%s)
            echo ::set-env name=CURRENT_BRANCH::"${{ github.head_ref }}"
            echo ::set-env name=commitMsg::$(git log -1 --pretty=format:%s)
          else
            BRANCH=$(basename "${{ github.ref }}")
            COMMIT_MESSG=$(git log --format=%s -n 1 ${{ github.event.after }})
            echo ::set-env name=CURRENT_BRANCH::$(basename "${{ github.ref }}")
            echo ::set-env name=commitMsg::$(git log --format=%s -n 1 ${{ github.event.after }})
          fi
          if [[ "${{ github.event_name }}" == "pull_request" || ${BRANCH} =~ master|^release-.*|^test-.*|^issue-.* || ${COMMIT_MESSG} =~ github-all|github-unit ]]; then
            echo ::set-env name=jobRun::'true'
          else
            echo ::set-env name=jobRun::'false'
          fi

      - name: Prepare dot-cicd
        run: |
          chmod +x .cicd/discover.sh && .cicd/discover.sh
          echo ${env.jobRun}
      
      # - name: Installing dependencies
      #   run: npm install

      # - name: Building libraries
      #   run: npm run build:libs

      # - name: Building production
      #   run: npm run build:prod

      # - name: Running tests
      #   run: |
      #     npm run test-headless